{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2d7626f8eaff59d4b1fe","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///external {\"root\":\"PropTypes\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\",\"amd\":\"prop-types\"}","webpack:///./src/modules/common/icon/icon.js","webpack:///./src/modules/common/helpers/request.helper.js","webpack:///./src/modules/common/services/notification.service.js","webpack:///./src/modules/common/helpers/deep.clone.helper.js","webpack:///./src/modules/universal-discovery/components/tab-content/tab.content.panel.component.js","webpack:///./src/modules/universal-discovery/services/universal.discovery.service.js","webpack:///./src/modules/common/tooltip-popup/tooltip.popup.component.js","webpack:///./src/modules/universal-discovery/components/finder/finder.component.js","webpack:///./src/modules/universal-discovery/components/select-content-button/select.content.button.component.js","webpack:///./src/modules/universal-discovery/components/content-table/content.table.component.js","webpack:///./src/modules/universal-discovery/universal.discovery.module.js","webpack:///./src/modules/universal-discovery/components/tab-nav/tab.nav.item.component.js","webpack:///./src/modules/universal-discovery/components/tab-content/finder.panel.component.js","webpack:///./src/modules/universal-discovery/components/finder/finder.tree.branch.component.js","webpack:///./src/modules/universal-discovery/components/finder/finder.tree.leaf.component.js","webpack:///./src/modules/universal-discovery/components/tab-content/search.panel.component.js","webpack:///./src/modules/universal-discovery/components/search/search.component.js","webpack:///./src/modules/universal-discovery/components/content-table/content.table.pagination.component.js","webpack:///./src/modules/universal-discovery/components/content-table/content.table.item.component.js","webpack:///./src/modules/universal-discovery/components/content-table/content.table.header.component.js","webpack:///./src/modules/universal-discovery/components/tab-content/create.panel.component.js","webpack:///./src/modules/universal-discovery/components/create/create.component.js","webpack:///./src/modules/universal-discovery/components/create/choose.language.component.js","webpack:///./src/modules/universal-discovery/components/create/choose.content.type.component.js","webpack:///./src/modules/universal-discovery/components/tab-content/bookmarks.panel.component.js","webpack:///./src/modules/universal-discovery/components/bookmarks/bookmarks.component.js","webpack:///./src/modules/universal-discovery/components/content-creator/content.creator.component.js","webpack:///./src/modules/universal-discovery/components/selected-content/selected.content.component.js","webpack:///./src/modules/universal-discovery/components/selected-content/selected.content.item.component.js","webpack:///./src/modules/universal-discovery/components/selected-content/selected.content.popup.component.js","webpack:///./src/modules/universal-discovery/components/content-meta-preview/content.meta.preview.component.js","webpack:///./src/modules/universal-discovery/services/bookmark.service.js","webpack:///./src/modules/common/helpers/compare.helper.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Icon","props","linkHref","customPath","className","extraClasses","_react2","default","createElement","xlinkHref","propTypes","PropTypes","string","isRequired","defaultProps","getBasicRequestInit","token","siteaccess","headers","X-Siteaccess","X-CSRF-Token","mode","credentials","handleRequestError","response","ok","Error","statusText","handleRequestResponse","json","handleRequestResponseStatus","status","NOTIFICATION_INFO_LABEL","NOTIFICATION_SUCCESS_LABEL","NOTIFICATION_WARNING_LABEL","NOTIFICATION_ERROR_LABEL","showNotification","detail","event","CustomEvent","document","body","dispatchEvent","showInfoNotification","message","label","showSuccessNotification","showWarningNotification","showErrorNotification","error","deepClone","data","clonedData","toString","apply","length","TabContentPanelComponent","attrs","id","isVisible","hidden","children","bool","node","_notification","_requestHelper","HEADERS_CREATE_VIEW","Accept","Content-Type","QUERY_LIMIT","loadPreselectedLocationData","startingLocationId","locationId","limit","callback","endpoint","window","Routing","generate","request","Request","fetch","then","catch","loadContentInfo","contentId","JSON","stringify","ViewInput","identifier","public","ContentQuery","Criteria","FacetBuilders","SortClauses","Filter","ContentIdCriterion","offset","method","assign","loadLocation","LocationQuery","LocationIdCriterion","checkCreatePermission","contentTypeIdentifier","languageCode","findLocationsByParentLocationId","parentLocationId","sortClauses","SectionIdentifier","ParentLocationIdCriterion","findContentBySearchQuery","query","Query","FullTextCriterion","loadContentTypes","TooltipPopupComponent","visible","title","onClick","onClose","tabIndex","_icon2","func","_react","_universalDiscovery","FinderComponent","Component","constructor","super","state","locationsMap","activeLocations","lastSelectedItem","appendMoreItems","bind","updateLocationsData","findLocationChildren","loadBranchLeaves","onLoadMore","renderBranch","setBranchContainerRef","setPreselectedState","preselectedItem","componentDidMount","isForcedLocation","allowedLocations","allowedIncludesPreselected","includes","preselectedLocation","isPreselectedLocation","loadPreselectedData","_extends","restInfo","componentDidUpdate","updateBranchesContainerScroll","UNSAFE_componentWillReceiveProps","nextProps","isShowingUp","setState","onItemSelect","Promise","resolve","createPreselectedLocationData","locations","Location","setPreselectedLocationData","subitems","createItem","parent","location","items","map","value","createData","count","totalCount","childCount","item","entries","forEach","key","parseInt","depth","_deepClone2","locationBranch","View","Result","searchHits","searchHit","[object Object]","keys","container","_refBranchesContainer","scrollLeft","scrollWidth","clientWidth","parentLocation","values","find","getLocationSortClauses","results","updateBranchActiveLocations","locationDepth","_props","sortFieldMappings","sortOrderMappings","sortField","sortOrder","onDataLoaded","updateSelectedBranches","updateActiveLocations","filter","reduce","total","selectedLocations","_finderTreeBranch2","onItemClick","onBranchClick","maxHeight","allowContainersOnly","contentTypesMap","multiple","selectedContent","onSelectContent","canSelectContent","onItemRemove","ref","render","style","number","shape","array","SelectContentButtonComponent","toggleEnabledState","handleSelect","handleUnselect","selectContentEnabled","checkCanSelectContent","stopPropagation","_props2","isSelected","iconId","type","onPreview","labels","contentTableItem","notAvailable","ContentTableComponent","perPage","activePage","pages","splitToPages","setActivePage","renderItem","UNSAFE_componentWillMount","ensurePageItemsLoaded","maxPage","Math","floor","index","pageIndex","push","requireItemsCount","_state","min","_contentTableItem2","renderHeader","_contentTableHeader2","renderPagination","_state2","pagesCount","paginationAttrs","minIndex","maxIndex","activeIndex","onChange","_contentTablePagination2","renderPageSpinner","renderPage","_state3","itemsCount","noItemsMessage","_bookmark","_compare","TAB_BROWSE","TAB_SEARCH","TAB_CREATE","TAB_BOOKMARKS","CLASS_SCROLL_DISABLED","CONTENT_META_PREVIEW_BASE_STATE","contentMeta","isPreviewMetaReady","isLocationAllowed","UniversalDiscoveryModule","selectedContentType","isForcedLanguage","cotfAllowedLanguages","cotfForcedLanguage","isForcedContentType","cotfAllowedContentTypes","cotfAllowedLocations","onLanguageSelected","onContentTypeSelected","handlePublish","togglePanel","setContentTypesMap","updateSelectedContent","renderSinglePanel","renderSingleTab","handleConfirm","handleSingleConfirm","setCreateModeState","updateContentMetaWithCurrentVersion","toggleBookmark","onBookmarkAdded","onBookmarkRemoved","setBookmarkLoadingStatus","requireBookmarksCount","onBookmarksLoaded","updatePermissionsState","setCanSelectContentState","updateMaxHeightState","setMainContainerRef","setContentContainerRef","loadingBookmarksLocationsIds","_refMainContainer","_refContentContainer","findContentType","tabsLabels","browse","Translator","trans","search","create","bookmarks","activeTab","mainContainerRestHeight","selectedLanguage","isCreateMode","hasPermission","userBookmarksCount","userBookmarksItems","bookmarksRequiredCount","bookmarksDuringLoadingCount","bookmarked","classList","add","addEventListener","initializeBookmarks","clientHeight","componentWillUnmount","remove","removeEventListener","prevProps","prevState","ContentInfo","Content","_id","loadBookmarks","BookmarkList","updatedContentMeta","currentVersion","CurrentVersion","contentType","contentTypes","group","result","onConfirm","addContentTypeInfo","clonedItem","ContentType","ContentTypeInfo","_href","contentMetaWithContentTypeInfo","dispatchBookmarkChangeEvent","isLoading","isBookmarkLoading","fetchBookmarkStatus","checkIsBookmarked","isBookmarked","setIsBookmarked","removeBookmark","addBookmark","onBookmarkToggled","itemToRemoveLocation","areSameLocations","closeContentMetaPreview","addedBookmarkLocation","bookmarkLocation","itemsToLoadCount","loadedBookmarksCount","newBookmarksRequiredCount","max","bookmarksToLoadCount","isAlreadySelected","isOverLimit","selectedItemsLimit","contentTypeInfo","isAllowedContentType","ContentTypeInfoList","renderContentMetaPreview","languages","isContentBookmarked","_contentMetaPreview2","ready","renderSelectedContent","_selectedContent2","itemsLimit","getTabConfig","iconIdentifier","renderTabs","_props3","extraTabs","visibleTabs","onlyContentOnTheFly","tabsToRender","tab","config","_tabNavItem2","renderPanels","_props4","cotfPreselectedContentType","cotfPreselectedLanguage","cotfPreselectedLocation","_state4","browsePanelConfig","panel","FinderPanelComponent","searchPanelConfig","SearchPanelComponent","bookmarksPanelConfig","BookmarksPanelComponent","createPanelConfig","CreatePanelComponent","forcedLanguage","preselectedLanguage","allowedLanguages","preselectedContentType","allowedContentTypes","panelsToRender","console","warn","Panel","_props5","searchResultsPerPage","bookmarksPerPage","_state5","renderConfirmBtn","_state6","disabled","confirmBtnLabel","checkPermission","access","renderCreateBtn","isDataSelected","createContentLabel","renderPermissionError","noPermissionMessage","renderNotAllowedLocationError","locationNotAllowedMessage","metaPreviewClassName","containerClassName","_contentCreator2","selectedLocationId","onCancel","cancelBtnLabel","eZ","addConfig","arrayOf","adminUiConfig","universalDiscoveryWidget","TabNavItemComponent","wrapperAttrs","_tabContentPanel2","_finder2","FinderTreeBranchComponent","expandBranch","removeLoadingStateFromItem","updateSelectedLocations","renderLeaf","currentlyLoadingLocationId","isLoadingChildren","contentTypeHref","isContainer","isSelectable","selected","_finderTreeLeaf2","remoteId","renderLoadMore","loadMoreLabel","height","FinderTreeLeafComponent","handleClick","target","closest","getContentTypeIdentifier","renderIcon","contentTypeIconUrl","helpers","getContentTypeIconUrl","renderLoadingIcon","renderSelectContentBtn","_selectContentButton2","content","componentClassName","isNotSelectableClassName","join","Name","searchAttrs","_search2","SearchComponent","isSearching","submitDisabled","updateItemsState","searchContent","onRequireItemsCount","toggleSubmitButtonState","setSearchInputRef","isClickEvent","nativeEvent","isEnterKeyEvent","keyCode","_refSearchInput","notification","renderSubmitBtn","btnAttrs","svgExtraClasses","btnLabel","trim","tableTitle","onKeyUp","_contentTable2","ContentTablePaginationComponent","btnFirstLabel","btnPrevLabel","btnNextLabel","btnLastLabel","btnClass","firstAttrs","prevAttrs","nextAttrs","lastAttrs","ContentTableItemComponent","notAvailableLabel","contentTypeName","contentTypeNames","nameLabel","typeLabel","componentProps","finderProps","chooseLanguageAndContentTypeTitle","selectLocationTitle","_create2","CreateComponent","_chooseLanguage2","_chooseContentType2","ChooseLanguageComponent","updateSelection","renderOption","selectedLanguageCode","priority","mappings","language","renderOptions","selectAttrs","selectLanguageTitle","ChooseContentTypeComponent","hasPreselectedAllowedContentType","isPreselectedContentType","_filterTimeout","updateFilterQuery","renderGroup","filterQuery","updateSelectedItem","toLowerCase","clearTimeout","setTimeout","isNotSelectable","groupName","groupAttrs","every","selectContentTypeTitle","typeToRefinePlaceholder","placeholder","getBookmarksAttrs","getWrapperAttrs","bookmarksAttrs","_bookmarks2","BookmarksComponent","renderTable","noBookmarksMessage","renderSpinner","renderNoBookmarksInfo","ContentCreatorComponent","handleIframeLoad","enablePublishBtn","disablePublishBtn","renderPublishBtn","_refIframe","iframeLoading","publishBtnDisabled","contentWindow","onbeforeunload","querySelector","click","iframeWindow","iframeDoc","iframeUrl","generateIframeUrl","pathname","loadLocationInfo","onunload","setAttribute","renderLoadingSpinner","publishLabel","cancelLabel","contentClass","src","onLoad","SelectedContentComponent","PureComponent","isPopupVisible","hidePopup","togglePopup","renderSelectedItem","_selectedContentItem2","onRemove","renderLimitLabel","limitLabel","limitLabelText","renderSelectedItems","_selectedContentPopup2","getTitle","titles","infoCssClasses","noConfirmedContentTitle","SelectedContentItemComponent","names","icon","SelectedContentPopupComponent","_tooltipPopup2","any","ContentMetaPreviewComponent","imageUri","translations","getImageUri","imageField","Version","Fields","field","fieldTypeIdentifier","fieldValue","uri","getTranslations","VersionInfo","VersionTranslationInfo","Language","renderTranslation","translation","renderImagePreview","imagePreviewNotAvailableLabel","alt","Fragment","renderBookmarkIcon","bookmarkIconId","wrapperClassName","formatShortDateWithTimezone","timezone","lastModifiedLabel","creationDateLabel","translationsLabel","Date","lastModificationDate","publishedDate","basicRequestInit","location1","location2"],"mappings":"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","file":"UniversalDiscovery.module.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"prop-types\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"prop-types\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"UniversalDiscovery\"] = factory(require(\"react\"), require(\"prop-types\"));\n\telse\n\t\troot[\"eZ\"] = root[\"eZ\"] || {}, root[\"eZ\"][\"modules\"] = root[\"eZ\"][\"modules\"] || {}, root[\"eZ\"][\"modules\"][\"UniversalDiscovery\"] = factory(root[\"React\"], root[\"PropTypes\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2d7626f8eaff59d4b1fe","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 0\n// module chunks = 0 1 2 3","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"PropTypes\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\",\"amd\":\"prop-types\"}\n// module id = 1\n// module chunks = 0 1 2 3","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Icon = (props) => {\n    const linkHref = props.customPath ? props.customPath : `/bundles/ezplatformadminui/img/ez-icons.svg#${props.name}`;\n    let className = 'ez-icon';\n\n    if (props.extraClasses) {\n        className = `${className} ${props.extraClasses}`;\n    }\n\n    return (\n        <svg className={className}>\n            <use xlinkHref={linkHref} />\n        </svg>\n    );\n};\n\nIcon.propTypes = {\n    extraClasses: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    customPath: PropTypes.string,\n};\n\nIcon.defaultProps = {\n    customPath: null,\n    name: null,\n};\n\nexport default Icon;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/icon/icon.js","/**\n * Returns basic RequestInit object for Request\n *\n * @function getBasicRequestInit\n * @param {Object} restInfo REST config hash containing: token and siteaccess properties\n * @returns {RequestInit}\n */\nexport const getBasicRequestInit = ({ token, siteaccess }) => {\n    return {\n        headers: {\n            'X-Siteaccess': siteaccess,\n            'X-CSRF-Token': token,\n        },\n        mode: 'same-origin',\n        credentials: 'same-origin',\n    };\n};\n\n/**\n * Handles request error\n *\n * @function handleRequestResponse\n * @param {Response} response\n * @returns {Response}\n */\nexport const handleRequestError = (response) => {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n\n    return response;\n};\n\n/**\n * Handles request response\n *\n * @function handleRequestResponse\n * @param {Response} response\n * @returns {Error|Promise}\n */\nexport const handleRequestResponse = (response) => {\n    return handleRequestError(response).json();\n};\n\n/**\n * Handles request response; returns status if response is OK\n *\n * @function handleRequestResponseStatus\n * @param {Response} response\n * @returns {number}\n */\nexport const handleRequestResponseStatus = (response) => {\n    return handleRequestError(response).status;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/helpers/request.helper.js","export const NOTIFICATION_INFO_LABEL = 'info';\nexport const NOTIFICATION_SUCCESS_LABEL = 'success';\nexport const NOTIFICATION_WARNING_LABEL = 'warning';\nexport const NOTIFICATION_ERROR_LABEL = 'danger';\n\n/**\n * Dispatches notification event\n *\n * @method showNotification\n * @param {{message: string, label: string}} detail\n */\nexport const showNotification = (detail) => {\n    const event = new CustomEvent('ez-notify', {\n        detail,\n    });\n\n    document.body.dispatchEvent(event);\n};\n\n/**\n * Dispatches info notification event\n *\n * @method showInfoNotification\n * @param {String} message\n */\nexport const showInfoNotification = (message) => {\n    showNotification({\n        message,\n        label: NOTIFICATION_INFO_LABEL,\n    });\n};\n\n/**\n * Dispatches success notification event\n *\n * @method showSuccessNotification\n * @param {String} message\n */\nexport const showSuccessNotification = (message) => {\n    showNotification({\n        message,\n        label: NOTIFICATION_SUCCESS_LABEL,\n    });\n};\n\n/**\n * Dispatches warning notification event\n *\n * @method showWarningNotification\n * @param {String} message\n */\nexport const showWarningNotification = (message) => {\n    showNotification({\n        message,\n        label: NOTIFICATION_WARNING_LABEL,\n    });\n};\n\n/**\n * Dispatches error notification event\n *\n * @method showErrorNotification\n * @param {(string|Error)} error\n */\nexport const showErrorNotification = (error) => {\n    const isErrorObj = error instanceof Error;\n    const message = isErrorObj ? error.message : error;\n\n    showNotification({\n        message,\n        label: NOTIFICATION_ERROR_LABEL,\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/services/notification.service.js","/**\n * Clones any object. Faster alternative to `JSON.parse(JSON.stringify)`\n *\n * @function deepClone\n * @param {Any} data\n * @returns {Any} cloned data\n */\nconst deepClone = (data) => {\n    let clonedData;\n\n    if (typeof data !== 'object') {\n        return data;\n    }\n\n    if (!data) {\n        return data;\n    }\n\n    if (Object.prototype.toString.apply(data) === '[object Array]') {\n        clonedData = [];\n\n        for (let i = 0; i < data.length; i++) {\n            clonedData[i] = deepClone(data[i]);\n        }\n\n        return clonedData;\n    }\n\n    clonedData = {};\n\n    for (let i in data) {\n        if (data.hasOwnProperty(i)) {\n            clonedData[i] = deepClone(data[i]);\n        }\n    }\n\n    return clonedData;\n};\n\nexport default deepClone;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/helpers/deep.clone.helper.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabContentPanelComponent = (props) => {\n    const attrs = {\n        id: props.id,\n        className: 'c-tab-content-panel',\n    };\n\n    if (!props.isVisible) {\n        attrs.hidden = true;\n    }\n\n    return <div {...attrs}>{props.children}</div>;\n};\n\nTabContentPanelComponent.propTypes = {\n    id: PropTypes.string.isRequired,\n    isVisible: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default TabContentPanelComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/tab-content/tab.content.panel.component.js","import { showErrorNotification } from '../../common/services/notification.service';\nimport { handleRequestResponse } from '../../common/helpers/request.helper.js';\n\nconst HEADERS_CREATE_VIEW = {\n    Accept: 'application/vnd.ez.api.View+json; version=1.1',\n    'Content-Type': 'application/vnd.ez.api.ViewInput+json; version=1.1',\n};\nexport const QUERY_LIMIT = 50;\nconst ENDPOINT_CREATE_VIEW = '/api/ezp/v2/views';\n\n/**\n * Loads preselected location data\n *\n * @function loadPreselectedLocationData\n * @param {String} startingLocationId\n * @param {String} locationId\n * @param {Number} limit\n * @param {Function} callback\n */\nexport const loadPreselectedLocationData = ({ startingLocationId, locationId, limit = QUERY_LIMIT }, callback) => {\n    const endpoint = window.Routing.generate('ezplatform.udw.preselected_location.data', {\n        startingLocationId,\n        locationId,\n        limit,\n    });\n    const request = new Request(endpoint, {\n        mode: 'same-origin',\n        credentials: 'same-origin',\n    });\n\n    fetch(request)\n        .then(handleRequestResponse)\n        .then(callback)\n        .catch(showErrorNotification);\n};\n\n/**\n * Loads content info\n *\n * @function loadContentInfo\n * @param {Object} restInfo REST config hash containing: token and siteaccess properties\n * @param {String} contentId\n * @param {Function} callback\n */\nexport const loadContentInfo = ({ token, siteaccess }, contentId, callback) => {\n    const body = JSON.stringify({\n        ViewInput: {\n            identifier: `udw-load-content-info-${contentId}`,\n            public: false,\n            ContentQuery: {\n                Criteria: {},\n                FacetBuilders: {},\n                SortClauses: {},\n                Filter: { ContentIdCriterion: `${contentId}` },\n                limit: 1,\n                offset: 0,\n            },\n        },\n    });\n    const request = new Request(ENDPOINT_CREATE_VIEW, {\n        method: 'POST',\n        headers: Object.assign({}, HEADERS_CREATE_VIEW, {\n            'X-Siteaccess': siteaccess,\n            'X-CSRF-Token': token,\n        }),\n        body,\n        mode: 'same-origin',\n        credentials: 'same-origin',\n    });\n\n    fetch(request)\n        .then(handleRequestResponse)\n        .then(callback)\n        .catch(showErrorNotification);\n};\n\n/**\n * Loads location\n *\n * @function loadLocation\n * @param {Object} params params hash containing REST config: token and siteaccess properties; locationId and offset\n * @param {Function} callback\n */\nexport const loadLocation = ({ token, siteaccess, locationId, limit = QUERY_LIMIT, offset = 0 }, callback) => {\n    const body = JSON.stringify({\n        ViewInput: {\n            identifier: `udw-location-by-id-${locationId}`,\n            public: false,\n            LocationQuery: {\n                Criteria: {},\n                FacetBuilders: {},\n                SortClauses: {},\n                Filter: { LocationIdCriterion: locationId },\n                limit,\n                offset,\n            },\n        },\n    });\n    const request = new Request(ENDPOINT_CREATE_VIEW, {\n        method: 'POST',\n        headers: Object.assign({}, HEADERS_CREATE_VIEW, {\n            'X-Siteaccess': siteaccess,\n            'X-CSRF-Token': token,\n        }),\n        body,\n        mode: 'same-origin',\n        credentials: 'same-origin',\n    });\n\n    fetch(request)\n        .then(handleRequestResponse)\n        .then(callback)\n        .catch(showErrorNotification);\n};\n\n/**\n * Checks if user has permission to create content\n *\n * @function checkCreatePermission\n * @param {Object} params params hash containing REST config: token, siteaccess, contentTypeIdentifier, languageCode, locationId\n * @param {Function} callback\n */\nexport const checkCreatePermission = ({ token, contentTypeIdentifier, languageCode, locationId }, callback) => {\n    const endpoint = window.Routing.generate('ezplatform.content_on_the_fly.has_access', {\n        languageCode: languageCode,\n        contentTypeIdentifier: contentTypeIdentifier,\n        locationId: locationId,\n    });\n    const request = new Request(endpoint, {\n        method: 'GET',\n        headers: { 'X-CSRF-Token': token },\n        mode: 'same-origin',\n        credentials: 'same-origin',\n    });\n\n    fetch(request)\n        .then(handleRequestResponse)\n        .then(callback)\n        .catch(showErrorNotification);\n};\n\n/**\n * Finds locations related to the parent location\n *\n * @function findLocationsByParentLocationId\n * @param {Object} params params hash containing REST config: token and siteaccess properties; parentLocationId and offset; sortClauses\n * @param {Function} callback\n */\nexport const findLocationsByParentLocationId = (\n    { token, siteaccess, parentLocationId, limit = QUERY_LIMIT, offset = 0, sortClauses = { SectionIdentifier: 'ascending' } },\n    callback\n) => {\n    const body = JSON.stringify({\n        ViewInput: {\n            identifier: `udw-locations-by-parent-location-id-${parentLocationId}`,\n            public: false,\n            LocationQuery: {\n                Criteria: {},\n                FacetBuilders: {},\n                SortClauses: sortClauses,\n                Filter: { ParentLocationIdCriterion: parentLocationId },\n                limit,\n                offset,\n            },\n        },\n    });\n    const request = new Request(ENDPOINT_CREATE_VIEW, {\n        method: 'POST',\n        headers: Object.assign({}, HEADERS_CREATE_VIEW, {\n            'X-Siteaccess': siteaccess,\n            'X-CSRF-Token': token,\n        }),\n        body,\n        mode: 'same-origin',\n        credentials: 'same-origin',\n    });\n\n    fetch(request)\n        .then(handleRequestResponse)\n        .then((json) =>\n            callback({\n                parentLocationId,\n                offset,\n                data: json,\n            })\n        )\n        .catch(showErrorNotification);\n};\n\n/**\n * Finds content matching a given text query\n *\n * @function findContentBySearchQuery\n * @param {Object} restInfo REST config hash containing: token and siteaccess properties\n * @param {String} query\n * @param {Function} callback\n */\nexport const findContentBySearchQuery = ({ token, siteaccess }, query, callback) => {\n    const body = JSON.stringify({\n        ViewInput: {\n            identifier: `udw-locations-by-search-query-${query}`,\n            public: false,\n            LocationQuery: {\n                Criteria: {},\n                FacetBuilders: {},\n                SortClauses: {},\n                Query: { FullTextCriterion: query },\n                limit: QUERY_LIMIT,\n                offset: 0,\n            },\n        },\n    });\n    const request = new Request(ENDPOINT_CREATE_VIEW, {\n        method: 'POST',\n        headers: Object.assign({}, HEADERS_CREATE_VIEW, {\n            'X-Siteaccess': siteaccess,\n            'X-CSRF-Token': token,\n        }),\n        body,\n        mode: 'same-origin',\n        credentials: 'same-origin',\n    });\n\n    fetch(request)\n        .then(handleRequestResponse)\n        .then(callback)\n        .catch(showErrorNotification);\n};\n\n/**\n * Loads content types\n *\n * @function loadContentTypes\n * @param {Object} restInfo REST config hash containing: token and siteaccess properties\n * @param {Function} callback\n */\nexport const loadContentTypes = ({ token, siteaccess }, callback) => {\n    const request = new Request('/api/ezp/v2/content/types', {\n        method: 'GET',\n        headers: {\n            Accept: 'application/vnd.ez.api.ContentTypeInfoList+json',\n            'X-Siteaccess': siteaccess,\n            'X-CSRF-Token': token,\n        },\n        mode: 'same-origin',\n        credentials: 'same-origin',\n    });\n\n    fetch(request)\n        .then(handleRequestResponse)\n        .then(callback)\n        .catch(showErrorNotification);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/services/universal.discovery.service.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../icon/icon';\n\nconst TooltipPopupComponent = (props) => {\n    const attrs = {\n        className: 'c-tooltip-popup',\n        hidden: !props.visible,\n    };\n\n    return (\n        <div {...attrs}>\n            <div className=\"c-tooltip-popup__header\">\n                <div className=\"c-tooltip-popup__title\">{props.title}</div>\n                <div className=\"c-tooltip-popup__close\" onClick={props.onClose} tabIndex=\"-1\">\n                    <Icon name=\"discard\" extraClasses=\"ez-icon--medium\" />\n                </div>\n            </div>\n            <div className=\"c-tooltip-popup__content\">{props.children}</div>\n        </div>\n    );\n};\n\nTooltipPopupComponent.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func,\n};\n\nTooltipPopupComponent.defaultProps = {\n    onClose: () => {},\n};\n\nexport default TooltipPopupComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/tooltip-popup/tooltip.popup.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FinderTreeBranchComponent from './finder.tree.branch.component';\nimport { loadPreselectedLocationData, QUERY_LIMIT } from '../../services/universal.discovery.service';\nimport deepClone from '../../../common/helpers/deep.clone.helper';\n\nexport default class FinderComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            locationsMap: {},\n            activeLocations: {},\n            lastSelectedItem: null,\n            limit: QUERY_LIMIT,\n        };\n\n        this.appendMoreItems = this.appendMoreItems.bind(this);\n        this.updateLocationsData = this.updateLocationsData.bind(this);\n        this.findLocationChildren = this.findLocationChildren.bind(this);\n        this.loadBranchLeaves = this.loadBranchLeaves.bind(this);\n        this.onLoadMore = this.onLoadMore.bind(this);\n        this.renderBranch = this.renderBranch.bind(this);\n        this.setBranchContainerRef = this.setBranchContainerRef.bind(this);\n        this.setPreselectedState = this.setPreselectedState.bind(this);\n\n        this.locationsMap = {};\n        this.activeLocations = {};\n        this.preselectedItem = null;\n    }\n\n    componentDidMount() {\n        const isForcedLocation = this.props.allowedLocations.length === 1;\n        const allowedIncludesPreselected = this.props.allowedLocations.includes(this.props.preselectedLocation);\n        const isPreselectedLocation = this.props.preselectedLocation && (!this.props.allowedLocations.length || allowedIncludesPreselected);\n\n        if (isForcedLocation) {\n            this.loadPreselectedData(this.props.allowedLocations[0], true);\n        } else if (isPreselectedLocation) {\n            this.loadPreselectedData(this.props.preselectedLocation, true);\n        } else {\n            this.props.findLocationsByParentLocationId(\n                { ...this.props.restInfo, parentLocationId: this.props.startingLocationId },\n                this.updateLocationsData\n            );\n        }\n    }\n\n    componentDidUpdate() {\n        this.updateBranchesContainerScroll();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const isShowingUp = nextProps.isVisible && nextProps.isVisible !== this.props.isVisible;\n\n        if (this.preselectedItem && this.locationsMap && this.activeLocations && isShowingUp) {\n            this.setState(this.setPreselectedState, () => nextProps.isVisible && this.props.onItemSelect(this.preselectedItem));\n        }\n    }\n\n    setPreselectedState() {\n        return { locationsMap: this.locationsMap, activeLocations: this.activeLocations };\n    }\n\n    /**\n     * Load data of preselected location.\n     *\n     * @method loadPreselectedData\n     * @param {String} locationId\n     * @memberof FinderComponent\n     */\n    loadPreselectedData(locationId) {\n        const promise = new Promise((resolve) =>\n            loadPreselectedLocationData({ startingLocationId: this.props.startingLocationId, locationId }, resolve)\n        );\n\n        promise.then((response) => {\n            this.createPreselectedLocationData(response);\n            this.preselectedItem = response.locations[locationId].Location;\n            this.setPreselectedLocationData();\n        });\n    }\n\n    /**\n     * Create preselected location data.\n     *\n     * @method createPreselectedLocationData\n     * @param {Object} locations\n     * @param {Object} subitems\n     * @memberof FinderComponent\n     */\n    createPreselectedLocationData({ locations, subitems }) {\n        const createItem = ({ parent, offset = 0, children, location }) => {\n            const createData = (items) => {\n                return items.locations.map((value) => {\n                    return { value };\n                });\n            };\n            const data = children ? createData(children) : [];\n            const count = children ? children.totalCount : location.childCount;\n\n            return { count, data, offset, parent, location };\n        };\n\n        if (subitems[1]) {\n            const item = createItem({ parent: 1, children: subitems[1] });\n\n            this.locationsMap[1] = item;\n            this.activeLocations[0] = item;\n        }\n\n        Object.entries(locations).forEach(([key, value]) => {\n            const item = createItem({\n                parent: parseInt(key, 10),\n                children: subitems[key],\n                location: value.Location,\n            });\n\n            this.locationsMap[key] = item;\n            this.activeLocations[value.Location.depth] = item;\n        });\n    }\n\n    /**\n     * Sets preselected location data.\n     *\n     * @method setPreselectedLocationData\n     * @memberof FinderComponent\n     */\n    setPreselectedLocationData() {\n        this.setState(this.setPreselectedState, () => this.props.isVisible && this.props.onItemSelect(this.preselectedItem));\n    }\n\n    /**\n     * Updates locations based state attributes: activeLocations and locationsMap\n     *\n     * @method updateLocationsData\n     * @param {Object} params params hash containing: parentLocationId, data and offset properties\n     * @memberof FinderComponent\n     */\n    updateLocationsData({ parentLocationId, data, offset }, location = null) {\n        this.setState((state) => {\n            const activeLocations = deepClone(state.activeLocations);\n            const locationBranch = {\n                location,\n                parent: parentLocationId,\n                data: data.View.Result.searchHits.searchHit,\n                count: data.View.Result.count,\n                offset,\n            };\n            const locationsMap = { ...deepClone(state.locationsMap), [parentLocationId]: locationBranch };\n\n            if (!Object.keys(activeLocations).length) {\n                activeLocations[0] = locationBranch;\n            }\n\n            return { activeLocations, locationsMap };\n        });\n    }\n\n    /**\n     * Updates the left scroll position of branches container\n     *\n     * @method updateBranchesContainerScroll\n     * @memberof FinderComponent\n     */\n    updateBranchesContainerScroll() {\n        const container = this._refBranchesContainer;\n\n        if (container) {\n            container.scrollLeft = container.scrollWidth - container.clientWidth;\n        }\n    }\n\n    /**\n     * Handles loading more items for a selected parent location\n     *\n     * @method onLoadMore\n     * @param {Object} parentLocation\n     * @memberof FinderComponent\n     */\n    onLoadMore(parentLocation) {\n        const limit = this.state.limit;\n        const offset = Object.values(this.state.activeLocations).find((location) => location.parent === parentLocation.id).offset + limit;\n        const sortClauses = this.getLocationSortClauses(parentLocation);\n\n        this.props.findLocationsByParentLocationId(\n            { ...this.props.restInfo, parentLocationId: parentLocation.id, limit, offset, sortClauses },\n            this.appendMoreItems\n        );\n    }\n\n    /**\n     * Appends more subitems for a selected location\n     *\n     * @method appendMoreItems\n     * @param {Object} response object containing information about: parentLocationId, offset and data\n     * @memberof FinderComponent\n     */\n    appendMoreItems({ parentLocationId, offset, data }) {\n        this.setState((state) => {\n            const activeLocations = deepClone(state.activeLocations);\n            const locationsMap = deepClone(state.locationsMap);\n\n            Object.keys(activeLocations).forEach((key) => {\n                const location = activeLocations[key];\n\n                if (location.parent === parentLocationId) {\n                    const results = [...location.data, ...data.View.Result.searchHits.searchHit];\n\n                    location.offset = offset;\n                    location.data = results;\n                    locationsMap[parentLocationId] = location;\n                }\n            });\n\n            return { activeLocations, locationsMap };\n        });\n    }\n\n    /**\n     * Loads branch children (sub-items)\n     *\n     * @method loadBranchLeaves\n     * @param {Object} parentLocation\n     * @memberof FinderComponent\n     */\n    loadBranchLeaves(parentLocation) {\n        const sortClauses = this.getLocationSortClauses(parentLocation);\n        const promise = new Promise((resolve) =>\n            this.props.findLocationsByParentLocationId(\n                {\n                    ...this.props.restInfo,\n                    parentLocationId: parentLocation.id,\n                    sortClauses,\n                },\n                resolve\n            )\n        );\n\n        promise.then((response) => {\n            this.updateLocationsData(response, parentLocation);\n            this.updateBranchActiveLocations(parentLocation.id);\n        });\n    }\n\n    /**\n     * Updates branch active locations\n     *\n     * @method updateBranchActiveLocations\n     * @param {String} parent the parent id\n     * @memberof FinderComponent\n     */\n    updateBranchActiveLocations(parent) {\n        const activeLocations = deepClone(this.state.activeLocations);\n        const depth = Object.keys(activeLocations).find((locationDepth) => activeLocations[locationDepth].parent === parent);\n\n        activeLocations[depth] = this.state.locationsMap[parent];\n\n        this.setState(() => ({ activeLocations }));\n    }\n\n    /**\n     * Generates sort clause for location\n     *\n     * @method getLocationSortClauses\n     * @param {Object} location\n     * @returns {Object} sortClauses for given location\n     * @memberof FinderComponent\n     */\n    getLocationSortClauses(location) {\n        const { sortFieldMappings, sortOrderMappings } = this.props;\n        const sortField = sortFieldMappings[location.sortField];\n        const sortOrder = sortOrderMappings[location.sortOrder];\n\n        if (!sortField || !sortOrder) {\n            return {};\n        }\n\n        return { [sortField]: sortOrder };\n    }\n\n    /**\n     * Finds location children (sub-items)\n     *\n     * @method findLocationChildren\n     * @param {Object} params\n     * @param {String} params.parent parent location id\n     * @param {Object} params.location\n     * @param {Function} params.onDataLoaded\n     * @memberof FinderComponent\n     */\n    findLocationChildren({ parent, location, onDataLoaded }) {\n        if (this.props.allowedLocations.length === 1) {\n            return;\n        }\n\n        this.setState(() => ({ lastSelectedItem: parent }));\n\n        if (this.state.locationsMap[parent]) {\n            this.updateSelectedBranches(location, onDataLoaded);\n            this.props.onItemSelect(location);\n\n            return;\n        }\n\n        const sortClauses = this.getLocationSortClauses(location);\n        const promise = new Promise((resolve) =>\n            this.props.findLocationsByParentLocationId(\n                {\n                    ...this.props.restInfo,\n                    parentLocationId: parent,\n                    sortClauses,\n                },\n                resolve\n            )\n        );\n\n        promise.then((response) => {\n            this.updateLocationsData(response, location);\n            this.updateSelectedBranches(location, onDataLoaded);\n\n            this.props.onItemSelect(location);\n        });\n    }\n\n    /**\n     * Updates selected branches state\n     *\n     * @param {Object} location location struct\n     * @param {Function} onDataLoaded\n     * @memberof FinderComponent\n     */\n    updateSelectedBranches(location, onDataLoaded) {\n        this.setState(this.updateActiveLocations.bind(this, location), onDataLoaded);\n    }\n\n    /**\n     * Updates active locations info\n     *\n     * @method updateActiveLocations\n     * @param {Object} location location struct\n     * @param {Object} state component state\n     * @returns {Object}\n     * @memberof FinderComponent\n     */\n    updateActiveLocations(location, state) {\n        const locationDepth = parseInt(location.depth, 10);\n        const activeLocations = Object.keys(state.activeLocations)\n            .filter((key) => parseInt(key, 10) < locationDepth)\n            .reduce((total, depth) => {\n                depth = parseInt(depth, 10);\n\n                total[depth] = state.activeLocations[depth];\n\n                return total;\n            }, {});\n\n        activeLocations[locationDepth] = state.locationsMap[location.id];\n\n        return { activeLocations };\n    }\n\n    /**\n     * Renders branch (the sub items container)\n     *\n     * @method renderBranch\n     * @param {Object} params params hash containing: parent, count and data properties\n     * @returns {null|Element}\n     * @memberof FinderComponent\n     */\n    renderBranch({ parent, data, count, location }) {\n        const { lastSelectedItem } = this.state;\n\n        if (!data || !count) {\n            return null;\n        }\n\n        const activeLocations = Object.values(this.state.activeLocations);\n        const selectedLocations = activeLocations.map((item) => item.parent);\n\n        return (\n            <FinderTreeBranchComponent\n                key={parent}\n                parentLocation={location}\n                items={data}\n                total={count}\n                lastSelectedItem={lastSelectedItem}\n                selectedLocations={selectedLocations}\n                onItemClick={this.findLocationChildren}\n                onBranchClick={this.loadBranchLeaves}\n                onLoadMore={this.onLoadMore}\n                maxHeight={this.props.maxHeight}\n                allowContainersOnly={this.props.allowContainersOnly}\n                contentTypesMap={this.props.contentTypesMap}\n                allowedLocations={this.props.allowedLocations}\n                multiple={this.props.multiple}\n                selectedContent={this.props.selectedContent}\n                onSelectContent={this.props.onSelectContent}\n                canSelectContent={this.props.canSelectContent}\n                onItemRemove={this.props.onItemRemove}\n            />\n        );\n    }\n\n    setBranchContainerRef(ref) {\n        this._refBranchesContainer = ref;\n    }\n\n    render() {\n        const activeLocations = Object.values(this.state.activeLocations);\n\n        if (!activeLocations.length) {\n            return null;\n        }\n\n        return (\n            <div className=\"c-finder\" style={{ maxHeight: `${this.props.maxHeight}px` }}>\n                <div className=\"c-finder__branches\" ref={this.setBranchContainerRef}>\n                    {activeLocations.map(this.renderBranch)}\n                </div>\n            </div>\n        );\n    }\n}\n\nFinderComponent.propTypes = {\n    multiple: PropTypes.bool.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    onItemSelect: PropTypes.func.isRequired,\n    startingLocationId: PropTypes.number.isRequired,\n    findLocationsByParentLocationId: PropTypes.func.isRequired,\n    restInfo: PropTypes.shape({\n        token: PropTypes.string.isRequired,\n        siteaccess: PropTypes.string.isRequired,\n    }).isRequired,\n    allowContainersOnly: PropTypes.bool,\n    contentTypesMap: PropTypes.object,\n    preselectedLocation: PropTypes.number,\n    allowedLocations: PropTypes.array,\n    isVisible: PropTypes.bool,\n    sortFieldMappings: PropTypes.object.isRequired,\n    sortOrderMappings: PropTypes.object.isRequired,\n    selectedContent: PropTypes.array.isRequired,\n    onSelectContent: PropTypes.func.isRequired,\n    canSelectContent: PropTypes.func.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n};\n\nFinderComponent.defaultProps = {\n    allowedLocations: [],\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/finder/finder.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../../../common/icon/icon';\n\nexport default class SelectContentButtonComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleEnabledState = this.toggleEnabledState.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleUnselect = this.handleUnselect.bind(this);\n\n        this.state = {\n            selectContentEnabled: true,\n        };\n    }\n\n    componentDidMount() {\n        this.checkCanSelectContent();\n    }\n\n    componentDidUpdate() {\n        this.checkCanSelectContent();\n    }\n\n    checkCanSelectContent() {\n        const { location, canSelectContent } = this.props;\n\n        canSelectContent(location, this.toggleEnabledState);\n    }\n\n    toggleEnabledState(selectContentEnabled) {\n        if (this.state.selectContentEnabled === selectContentEnabled) {\n            return;\n        }\n\n        this.setState((state) => ({ ...state, selectContentEnabled }));\n    }\n\n    handleSelect(event) {\n        event.stopPropagation();\n\n        this.props.onSelectContent(this.props.location);\n    }\n\n    handleUnselect(event) {\n        event.stopPropagation();\n\n        this.props.onItemRemove(this.props.location.id);\n    }\n\n    render() {\n        const { multiple, isSelected } = this.props;\n        const iconId = isSelected ? 'checkmark' : 'create';\n        const attrs = {\n            type: 'button',\n            className: 'c-select-content-button',\n            onClick: isSelected ? this.handleUnselect : this.handleSelect,\n        };\n\n        if (!multiple || (!isSelected && !this.state.selectContentEnabled)) {\n            return null;\n        }\n\n        if (isSelected) {\n            attrs.className = `${attrs.className} ${attrs.className}--selected`;\n        }\n\n        return (\n            <button {...attrs}>\n                <Icon name={iconId} extraClasses=\"ez-icon--small\" />\n            </button>\n        );\n    }\n}\n\nSelectContentButtonComponent.propTypes = {\n    data: PropTypes.object.isRequired,\n    onPreview: PropTypes.func.isRequired,\n    contentTypesMap: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func,\n    labels: PropTypes.shape({\n        contentTableItem: PropTypes.shape({\n            notAvailable: PropTypes.string.isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    onSelectContent: PropTypes.func.isRequired,\n    canSelectContent: PropTypes.func.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n    multiple: PropTypes.bool.isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/select-content-button/select.content.button.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../../../common/icon/icon';\n\nimport ContentTablePaginationComponent from './content.table.pagination.component';\nimport ContentTableItemComponent from './content.table.item.component';\nimport ContentTableHeaderComponent from './content.table.header.component';\n\nexport default class ContentTableComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: props.items,\n            perPage: props.perPage,\n            activePage: 0,\n            pages: this.splitToPages(props.items, props.perPage),\n            count: props.count,\n        };\n\n        this.setActivePage = this.setActivePage.bind(this);\n        this.renderItem = this.renderItem.bind(this);\n    }\n\n    UNSAFE_componentWillMount() {\n        this.ensurePageItemsLoaded(0);\n    }\n\n    UNSAFE_componentWillReceiveProps({ items, perPage, count }) {\n        const maxPage = !count ? 0 : Math.floor((count - 1) / perPage);\n\n        this.setState((state) => ({\n            items,\n            count,\n            activePage: state.activePage <= maxPage ? state.activePage : maxPage,\n            pages: this.splitToPages(items, perPage),\n        }));\n    }\n\n    /**\n     * Splits items into pages\n     *\n     * @method splitToPages\n     * @param {Array} items\n     * @param {Number} perPage\n     * @returns {Array}\n     * @memberof ContentTableComponent\n     */\n    splitToPages(items, perPage) {\n        return items.reduce((pages, item, index) => {\n            const pageIndex = Math.floor(index / perPage);\n\n            if (!pages[pageIndex]) {\n                pages[pageIndex] = [];\n            }\n\n            pages[pageIndex].push(item);\n\n            return pages;\n        }, []);\n    }\n\n    ensurePageItemsLoaded(activePage) {\n        const { requireItemsCount } = this.props;\n        const { count, perPage } = this.state;\n        const itemsNeededCount = Math.min(perPage * (activePage + 1), count);\n\n        requireItemsCount(itemsNeededCount);\n    }\n\n    /**\n     * Sets active page index state\n     *\n     * @method setActivePage\n     * @param {Number} activePage\n     * @memberof ContentTableComponent\n     */\n    setActivePage(activePage) {\n        this.ensurePageItemsLoaded(activePage);\n\n        this.setState(() => ({ activePage }));\n    }\n\n    /**\n     * Renders single item\n     *\n     * @method renderItem\n     * @param {Object} item\n     * @returns {Element}\n     * @memberof ContentTableComponent\n     */\n    renderItem(item) {\n        const location = item.Location;\n        const { contentTypesMap, onItemSelect, selectedContent, onSelectContent, canSelectContent, onItemRemove, multiple } = this.props;\n\n        return (\n            <ContentTableItemComponent\n                key={location.id}\n                data={location}\n                contentTypesMap={contentTypesMap}\n                onPreview={() => onItemSelect(location)}\n                selectedContent={selectedContent}\n                onSelectContent={onSelectContent}\n                canSelectContent={canSelectContent}\n                onItemRemove={onItemRemove}\n                multiple={multiple}\n            />\n        );\n    }\n\n    /**\n     * Renders single search results item\n     *\n     * @method renderHeader\n     * @returns {Element}\n     * @memberof ContentTableComponent\n     */\n    renderHeader() {\n        const { items } = this.state;\n        const showHeader = !!items.length;\n\n        if (!showHeader) {\n            return null;\n        }\n\n        return <ContentTableHeaderComponent />;\n    }\n\n    /**\n     * Renders pagination\n     *\n     * @method renderPagination\n     * @returns {Element}\n     * @memberof ContentTableComponent\n     */\n    renderPagination() {\n        const { activePage, count, perPage } = this.state;\n        const pagesCount = !count ? 0 : Math.floor((count - 1) / perPage) + 1;\n        const paginationAttrs = {\n            minIndex: 0,\n            maxIndex: pagesCount - 1,\n            activeIndex: activePage,\n            onChange: this.setActivePage,\n        };\n\n        if (!pagesCount || paginationAttrs.minIndex === paginationAttrs.maxIndex) {\n            return null;\n        }\n\n        return <ContentTablePaginationComponent {...paginationAttrs} />;\n    }\n\n    renderPageSpinner() {\n        return <Icon name=\"spinner\" extraClasses=\"c-content-table__loading-spinner ez-spin ez-icon-x2 ez-icon-spinner\" />;\n    }\n\n    renderPage() {\n        const { pages, activePage, perPage, count } = this.state;\n        const itemsCount = this.state.items.length;\n        const neededItemsCount = Math.min((activePage + 1) * perPage, count);\n        const allNeededItemsLoaded = itemsCount >= neededItemsCount;\n\n        if (!allNeededItemsLoaded) {\n            return this.renderPageSpinner();\n        }\n\n        const pageToRender = !itemsCount ? [] : pages[activePage];\n\n        return pageToRender.map(this.renderItem);\n    }\n\n    render() {\n        const { title, count } = this.props;\n\n        if (!count) {\n            return null;\n        }\n\n        return (\n            <div className=\"c-content-table\">\n                <div className=\"c-content-table__title\">\n                    {title} ({count})\n                </div>\n                {this.renderHeader()}\n                <div className=\"c-content-table__list\">{this.renderPage()}</div>\n                {this.renderPagination()}\n            </div>\n        );\n    }\n}\n\nContentTableComponent.propTypes = {\n    items: PropTypes.array.isRequired,\n    count: PropTypes.number.isRequired,\n    perPage: PropTypes.number.isRequired,\n    onItemSelect: PropTypes.func.isRequired,\n    contentTypesMap: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func,\n    title: PropTypes.string.isRequired,\n    noItemsMessage: PropTypes.string,\n    requireItemsCount: PropTypes.func.isRequired,\n    selectedContent: PropTypes.array.isRequired,\n    onSelectContent: PropTypes.func.isRequired,\n    canSelectContent: PropTypes.func.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n    multiple: PropTypes.bool.isRequired,\n};\n\nContentTableComponent.defaultProps = {\n    onItemClick: null,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/content-table/content.table.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TabNavItemComponent from './components/tab-nav/tab.nav.item.component';\nimport FinderPanelComponent from './components/tab-content/finder.panel.component';\nimport SearchPanelComponent from './components/tab-content/search.panel.component';\nimport CreatePanelComponent from './components/tab-content/create.panel.component';\nimport BookmarksPanelComponent from './components/tab-content/bookmarks.panel.component';\nimport ContentCreatorComponent from './components/content-creator/content.creator.component';\nimport SelectedContentComponent from './components/selected-content/selected.content.component';\nimport ContentMetaPreviewComponent from './components/content-meta-preview/content.meta.preview.component';\nimport {\n    loadContentInfo,\n    loadContentTypes,\n    findLocationsByParentLocationId,\n    findContentBySearchQuery,\n    checkCreatePermission,\n} from './services/universal.discovery.service';\nimport { checkIsBookmarked, loadBookmarks, addBookmark, removeBookmark } from './services/bookmark.service';\nimport { showErrorNotification } from '../common/services/notification.service';\nimport { areSameLocations } from '../common/helpers/compare.helper';\nimport deepClone from '../common/helpers/deep.clone.helper';\n\nexport const TAB_BROWSE = 'browse';\nexport const TAB_SEARCH = 'search';\nexport const TAB_CREATE = 'create';\nexport const TAB_BOOKMARKS = 'bookmarks';\n\nconst CLASS_SCROLL_DISABLED = 'ez-scroll-disabled';\nconst CONTENT_META_PREVIEW_BASE_STATE = {\n    contentMeta: null,\n    isPreviewMetaReady: false,\n    isLocationAllowed: true,\n};\n\nexport default class UniversalDiscoveryModule extends Component {\n    constructor(props) {\n        super(props);\n\n        let selectedContentType = {};\n        const isForcedLanguage = props.cotfAllowedLanguages.length === 1 || props.cotfForcedLanguage;\n        const isForcedContentType = props.cotfAllowedContentTypes.length === 1;\n        const isForcedLocation = props.cotfAllowedLocations.length === 1;\n\n        this.onLanguageSelected = this.onLanguageSelected.bind(this);\n        this.onContentTypeSelected = this.onContentTypeSelected.bind(this);\n        this.handlePublish = this.handlePublish.bind(this);\n        this.togglePanel = this.togglePanel.bind(this);\n        this.setContentTypesMap = this.setContentTypesMap.bind(this);\n        this.canSelectContent = this.canSelectContent.bind(this);\n        this.updateSelectedContent = this.updateSelectedContent.bind(this);\n        this.onItemRemove = this.onItemRemove.bind(this);\n        this.onItemSelect = this.onItemSelect.bind(this);\n        this.renderSinglePanel = this.renderSinglePanel.bind(this);\n        this.renderSingleTab = this.renderSingleTab.bind(this);\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleSingleConfirm = this.handleSingleConfirm.bind(this);\n        this.setCreateModeState = this.setCreateModeState.bind(this);\n        this.updateContentMetaWithCurrentVersion = this.updateContentMetaWithCurrentVersion.bind(this);\n        this.toggleBookmark = this.toggleBookmark.bind(this);\n        this.onBookmarkAdded = this.onBookmarkAdded.bind(this);\n        this.onBookmarkRemoved = this.onBookmarkRemoved.bind(this);\n        this.setBookmarkLoadingStatus = this.setBookmarkLoadingStatus.bind(this);\n        this.requireBookmarksCount = this.requireBookmarksCount.bind(this);\n        this.onBookmarksLoaded = this.onBookmarksLoaded.bind(this);\n        this.updatePermissionsState = this.updatePermissionsState.bind(this);\n        this.setCanSelectContentState = this.setCanSelectContentState.bind(this);\n        this.updateMaxHeightState = this.updateMaxHeightState.bind(this);\n        this.setMainContainerRef = this.setMainContainerRef.bind(this);\n        this.setContentContainerRef = this.setContentContainerRef.bind(this);\n\n        this.loadingBookmarksLocationsIds = {};\n        this._refMainContainer;\n        this._refContentContainer;\n\n        if (isForcedContentType) {\n            selectedContentType = this.findContentType(props.cotfAllowedContentTypes[0]);\n        }\n\n        this.tabsLabels = {\n            browse: Translator.trans(/*@Desc(\"Browse\")*/ 'browse.tab.label', {}, 'universal_discovery_widget'),\n            search: Translator.trans(/*@Desc(\"Search\")*/ 'search.tab.label', {}, 'universal_discovery_widget'),\n            create: Translator.trans(/*@Desc(\"Create\")*/ 'create.tab.label', {}, 'universal_discovery_widget'),\n            bookmarks: Translator.trans(/*@Desc(\"Bookmarks\")*/ 'bookmarks.tab.label', {}, 'universal_discovery_widget'),\n        };\n\n        this.state = {\n            activeTab: props.activeTab,\n            contentTypesMap: {},\n            selectedContent: [],\n            maxHeight: props.maxHeight,\n            mainContainerRestHeight: 0,\n            selectedLanguage: {},\n            selectedContentType,\n            isCreateMode: isForcedLanguage && isForcedContentType && isForcedLocation,\n            hasPermission: true,\n            userBookmarksCount: null,\n            userBookmarksItems: [],\n            bookmarksRequiredCount: 0,\n            bookmarksDuringLoadingCount: 0,\n            bookmarked: {},\n            canSelectContent: false,\n            ...CONTENT_META_PREVIEW_BASE_STATE,\n        };\n    }\n\n    componentDidMount() {\n        this.props.loadContentTypes(this.props.restInfo, this.setContentTypesMap);\n\n        if (!this._refContentContainer) {\n            return null;\n        }\n\n        window.document.body.classList.add(CLASS_SCROLL_DISABLED);\n        window.addEventListener('resize', this.updateMaxHeightState, false);\n\n        this.initializeBookmarks();\n\n        this.setState(() => ({\n            maxHeight: this._refContentContainer.clientHeight,\n            mainContainerRestHeight: this._refMainContainer.clientHeight - this._refContentContainer.clientHeight,\n        }));\n    }\n\n    componentWillUnmount() {\n        window.document.body.classList.remove(CLASS_SCROLL_DISABLED);\n        window.removeEventListener('resize', this.updateMaxHeightState);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { contentMeta, isPreviewMetaReady } = this.state;\n\n        if (!!contentMeta && contentMeta !== prevState.contentMeta && !isPreviewMetaReady) {\n            const contentId = contentMeta.ContentInfo.Content._id;\n\n            this.props.loadContentInfo(this.props.restInfo, contentId, this.updateContentMetaWithCurrentVersion.bind(this, contentId));\n        }\n\n        if (!this.props.multiple) {\n            this.canSelectContent(contentMeta, this.setCanSelectContentState);\n        }\n    }\n\n    /**\n     * Updates the maxHeight state\n     *\n     * @method updateMaxHeightState\n     * @memberof UniversalDiscoveryModule\n     */\n    updateMaxHeightState() {\n        this.setState(() => ({\n            maxHeight: this._refMainContainer.clientHeight - this.state.mainContainerRestHeight,\n        }));\n    }\n\n    /**\n     * Sets the can select content state.\n     *\n     * @method setCanSelectContentState\n     * @param {Boolean} canSelectContent\n     * @memberof UniversalDiscoveryModule\n     */\n    setCanSelectContentState(canSelectContent) {\n        if (this.state.canSelectContent === canSelectContent) {\n            return;\n        }\n\n        this.setState(() => ({ canSelectContent }));\n    }\n\n    /**\n     * Loads first 10 user's bookmarks (or less if user doesn't have that many bookmarks).\n     * Sets total count of user's bookmarks.\n     *\n     * @method initializeBookmarks\n     * @memberof UniversalDiscoveryModule\n     */\n    initializeBookmarks() {\n        const { restInfo } = this.props;\n        const bookmarksLoaded = new Promise((resolve) => loadBookmarks(restInfo, 10, 0, resolve));\n\n        bookmarksLoaded\n            .then(({ BookmarkList }) =>\n                this.setState(() => ({\n                    userBookmarksCount: BookmarkList.count,\n                    userBookmarksItems: BookmarkList.items,\n                }))\n            )\n            .catch(showErrorNotification);\n    }\n\n    /**\n     * Updates selected content item meta with a current version info object\n     *\n     * @method updateContentMetaWithCurrentVersion\n     * @param {Number} contentId ID of content for which we fetched CurrentVersion\n     * @param {Object} response\n     */\n    updateContentMetaWithCurrentVersion(contentId, response) {\n        const { contentMeta } = this.state;\n\n        if (!contentMeta || contentMeta.ContentInfo.Content._id !== contentId) {\n            return;\n        }\n\n        const updatedContentMeta = deepClone(contentMeta);\n        const currentVersion = response.View.Result.searchHits.searchHit[0].value.Content.CurrentVersion;\n\n        updatedContentMeta.CurrentVersion = currentVersion;\n\n        this.setState(() => ({ contentMeta: updatedContentMeta, isPreviewMetaReady: true }));\n    }\n\n    /**\n     * Finds a content type data\n     *\n     * @method findContentType\n     * @param {String} identifier\n     * @returns {Object}\n     */\n    findContentType(identifier) {\n        let contentType = null;\n\n        Object.values(this.props.contentTypes).forEach((group) => {\n            const result = group.find((contentType) => contentType.identifier === identifier);\n\n            if (result) {\n                contentType = result;\n            }\n        });\n\n        return contentType;\n    }\n\n    /**\n     * Handles selection confirm action\n     *\n     * @method handleConfirm\n     */\n    handleConfirm() {\n        this.props.onConfirm(this.addContentTypeInfo(this.state.selectedContent));\n    }\n\n    handleSingleConfirm() {\n        this.setState(\n            (state) => ({ selectedContent: [state.contentMeta] }),\n            () => this.props.onConfirm(this.addContentTypeInfo(this.state.selectedContent))\n        );\n    }\n\n    /**\n     * Handles create content action\n     *\n     * @method setCreateModeState\n     */\n    setCreateModeState() {\n        this.setState(() => ({ isCreateMode: true }));\n    }\n\n    /**\n     * Handles publish content action\n     *\n     * @method handlePublish\n     * @param {Object} location\n     */\n    handlePublish(location) {\n        this.props.onConfirm(this.addContentTypeInfo([location]));\n    }\n\n    /**\n     * Adds a content type info to a content\n     *\n     * @method addContentTypeInfo\n     * @param {Array} items\n     * @returns {Array}\n     */\n    addContentTypeInfo(items) {\n        const { contentTypesMap } = this.state;\n\n        return items.map((item) => {\n            const clonedItem = deepClone(item);\n            const contentType = clonedItem.ContentInfo.Content.ContentType;\n\n            clonedItem.ContentInfo.Content.ContentTypeInfo = contentTypesMap[contentType._href];\n\n            return clonedItem;\n        });\n    }\n\n    /**\n     * Handles selected contet item removal action\n     *\n     * @method onItemRemove\n     * @param {String} id\n     */\n    onItemRemove(id) {\n        this.setState((state) => ({\n            selectedContent: state.selectedContent.filter((item) => item.id !== id),\n        }));\n    }\n\n    /**\n     * Handles item selected action\n     *\n     * @method onItemSelect\n     * @param {Object} contentMeta\n     */\n    onItemSelect(contentMeta) {\n        this.setState(\n            () => CONTENT_META_PREVIEW_BASE_STATE,\n            () => {\n                const isLocationAllowed =\n                    !this.props.cotfAllowedLocations.length || this.props.cotfAllowedLocations.includes(contentMeta.id);\n                const contentMetaWithContentTypeInfo = this.addContentTypeInfo([contentMeta])[0];\n\n                this.setState(() => ({\n                    contentMeta: contentMetaWithContentTypeInfo,\n                    isLocationAllowed,\n                    isPreviewMetaReady: false,\n                }));\n            }\n        );\n    }\n\n    /**\n     * Fires `ez-bookmark-change` event\n     *\n     * @method dispatchBookmarkChangeEvent\n     * @param {Number} locationId\n     * @param {Boolean} bookmarked\n     */\n    dispatchBookmarkChangeEvent(locationId, bookmarked) {\n        const event = new CustomEvent('ez-bookmark-change', { detail: { bookmarked, locationId } });\n\n        document.body.dispatchEvent(event);\n    }\n\n    /**\n     * Sets loading status of bookmark\n     *\n     * @method setBookmarkLoadingStatus\n     * @param {String} locationId\n     * @param {Boolean} isLoading\n     * @memberof UniversalDiscoveryModule\n     */\n    setBookmarkLoadingStatus(locationId, isLoading) {\n        this.loadingBookmarksLocationsIds[locationId] = isLoading;\n    }\n\n    /**\n     * Returns true if bookmark is loading, otherwise returns false\n     *\n     * @method isBookmarkLoading\n     * @param {String} locationId\n     * @memberof UniversalDiscoveryModule\n     */\n    isBookmarkLoading(locationId) {\n        return !!this.loadingBookmarksLocationsIds[locationId];\n    }\n\n    /**\n     * Checks whether location is already bookmarked\n     *\n     * @method fetchBookmarkStatus\n     * @param {String} locationId\n     * @memberof UniversalDiscoveryModule\n     */\n    fetchBookmarkStatus(locationId) {\n        if (this.isBookmarkLoading(locationId)) {\n            return;\n        }\n\n        this.setBookmarkLoadingStatus(locationId, true);\n\n        const { restInfo } = this.props;\n        const checked = new Promise((resolve) => checkIsBookmarked(restInfo, locationId, resolve));\n\n        checked\n            .then((isBookmarked) => {\n                this.setIsBookmarked(locationId, isBookmarked);\n                this.setBookmarkLoadingStatus(locationId, false);\n            })\n            .catch(showErrorNotification);\n    }\n\n    /**\n     * Sets bookmark value in the state\n     *\n     * @method setIsBookmarked\n     * @param {String} locationId\n     * @param {Boolean} isBookmarked\n     * @memberof ContentMetaPreviewComponent\n     */\n    setIsBookmarked(locationId, isBookmarked) {\n        this.setState((state) => {\n            const bookmarked = { ...state.bookmarked };\n\n            bookmarked[locationId] = isBookmarked;\n\n            return { bookmarked };\n        });\n    }\n\n    /**\n     * Removes or adds bookmark depending on if it exists or not\n     *\n     * @method toggleBookmark\n     * @param {Object} location\n     * @memberof UniversalDiscoveryModule\n     */\n    toggleBookmark(location) {\n        const locationId = location.id;\n        const isBookmarked = this.isBookmarked(locationId);\n\n        if (this.isBookmarkLoading(locationId)) {\n            return;\n        }\n\n        this.setBookmarkLoadingStatus(locationId, true);\n\n        const { restInfo } = this.props;\n        const toggleBookmark = isBookmarked ? removeBookmark : addBookmark;\n        const onBookmarkToggled = isBookmarked ? this.onBookmarkRemoved : this.onBookmarkAdded;\n        const bookmarkToggled = new Promise((resolve) => toggleBookmark(restInfo, locationId, resolve));\n\n        bookmarkToggled\n            .then(() => {\n                onBookmarkToggled(location);\n                this.setBookmarkLoadingStatus(locationId, false);\n            })\n            .catch(showErrorNotification);\n    }\n\n    /**\n     * Returns\n     *\n     * @method isBookmarked\n     * @param {String} locationId\n     * @returns {Boolean}\n     * @memberof UniversalDiscoveryModule\n     */\n    isBookmarked(locationId) {\n        const { bookmarked } = this.state;\n        const locationBookmarkChecked = locationId in bookmarked;\n\n        if (!locationBookmarkChecked) {\n            this.fetchBookmarkStatus(locationId);\n            return null;\n        }\n\n        return bookmarked[locationId];\n    }\n\n    /**\n     * Called on bookmarked removed\n     *\n     * @method onBookmarkRemoved\n     * @param {Object} itemToRemoveLocation\n     * @memberof UniversalDiscoveryModule\n     */\n    onBookmarkRemoved(itemToRemoveLocation) {\n        this.setState(\n            (state) => ({\n                userBookmarksCount: state.userBookmarksCount - 1,\n                userBookmarksItems: state.userBookmarksItems.filter((item) => !areSameLocations(item.Location, itemToRemoveLocation)),\n            }),\n            () => {\n                this.setIsBookmarked(itemToRemoveLocation.id, false);\n\n                const { activeTab } = this.state;\n\n                if (activeTab === TAB_BOOKMARKS) {\n                    this.closeContentMetaPreview();\n                }\n\n                this.dispatchBookmarkChangeEvent(itemToRemoveLocation.id, false);\n            }\n        );\n    }\n\n    /**\n     * Called on bookmarked added\n     *\n     * @method onBookmarkAdded\n     * @param {Object} addedBookmarkLocation\n     * @memberof UniversalDiscoveryModule\n     */\n    onBookmarkAdded(addedBookmarkLocation) {\n        this.setState(\n            (state) => ({\n                userBookmarksCount: state.userBookmarksCount + 1,\n                userBookmarksItems: [{ Location: addedBookmarkLocation }, ...state.userBookmarksItems],\n            }),\n            () => {\n                this.setIsBookmarked(addedBookmarkLocation.id, true);\n                this.dispatchBookmarkChangeEvent(addedBookmarkLocation.id, true);\n            }\n        );\n    }\n\n    /**\n     * Called on bookmarks loaded\n     *\n     * @method onBookmarksLoaded\n     * @param {Object} { BookmarksList }\n     * @memberof UniversalDiscoveryModule\n     */\n    onBookmarksLoaded({ BookmarkList }) {\n        const { items } = BookmarkList;\n\n        this.setState(\n            (state) => ({\n                bookmarksDuringLoadingCount: state.bookmarksDuringLoadingCount - items.length,\n                userBookmarksItems: [...items, ...state.userBookmarksItems],\n            }),\n            () => items.forEach((bookmarkLocation) => this.setIsBookmarked(bookmarkLocation.Location.id, true))\n        );\n    }\n\n    /**\n     * Loads bookmarks\n     *\n     * @method loadBookmarks\n     * @param {Number} itemsToLoadCount\n     * @memberof UniversalDiscoveryModule\n     */\n    loadBookmarks(itemsToLoadCount) {\n        const { restInfo } = this.props;\n        const offset = this.state.userBookmarksItems.length;\n        const bookmarksLoaded = new Promise((resolve) => loadBookmarks(restInfo, itemsToLoadCount, offset, resolve));\n\n        bookmarksLoaded.then(this.onBookmarksLoaded).catch(showErrorNotification);\n    }\n\n    /**\n     * Ensures that enough bookmarks are loaded\n     *\n     * @method requireBookmarksCount\n     * @param {String} locationId\n     * @memberof UniversalDiscoveryModule\n     */\n    requireBookmarksCount(count) {\n        this.setState((state) => {\n            const { bookmarksRequiredCount, bookmarksDuringLoadingCount, userBookmarksItems } = state;\n            const loadedBookmarksCount = userBookmarksItems.length;\n            const newBookmarksRequiredCount = Math.max(count, bookmarksRequiredCount);\n            const bookmarksToLoadCount = newBookmarksRequiredCount - loadedBookmarksCount - bookmarksDuringLoadingCount;\n\n            if (!!bookmarksToLoadCount) {\n                this.loadBookmarks(bookmarksToLoadCount);\n            }\n\n            return {\n                bookmarksDuringLoadingCount: bookmarksDuringLoadingCount + bookmarksToLoadCount,\n                bookmarksRequiredCount: newBookmarksRequiredCount,\n            };\n        });\n    }\n\n    /**\n     * Updates language selected state\n     *\n     * @method onLanguageSelected\n     * @param {String} selectedLanguage\n     */\n    onLanguageSelected(selectedLanguage) {\n        this.setState(() => ({ selectedLanguage }));\n    }\n\n    /**\n     * Updates selected content type state\n     *\n     * @method onContentTypeSelected\n     * @param {Object} selectedContentType\n     */\n    onContentTypeSelected(selectedContentType) {\n        this.setState(() => ({ selectedContentType }));\n    }\n\n    /**\n     * Updates selected content state\n     *\n     * @method updateSelectedContent\n     */\n    updateSelectedContent(location) {\n        const selectedContent = !this.props.multiple ? [location] : [...this.state.selectedContent, location];\n\n        this.setState(() => ({ selectedContent }));\n    }\n\n    /**\n     * Does checking whether a content can be selected\n     *\n     * @method canSelectContent\n     * @param {Object} data\n     * @param {Function} callback\n     * @returns {Boolean}\n     */\n    canSelectContent(data, callback) {\n        if (!data) {\n            return callback(false);\n        }\n\n        const { selectedContent, contentTypesMap } = this.state;\n        const isAlreadySelected = selectedContent.find((item) => item.ContentInfo.Content._id === data.ContentInfo.Content._id);\n        const isOverLimit = !!this.props.selectedItemsLimit && selectedContent.length >= this.props.selectedItemsLimit;\n        const contentTypeInfo = contentTypesMap[data.ContentInfo.Content.ContentType._href];\n        const isAllowedContentType =\n            !this.props.cotfAllowedContentTypes.length || this.props.cotfAllowedContentTypes.includes(contentTypeInfo.identifier);\n\n        if (isAlreadySelected || isOverLimit || !isAllowedContentType) {\n            return callback(false);\n        }\n\n        data.ContentInfo.Content.ContentTypeInfo = contentTypeInfo;\n\n        return this.props.canSelectContent({ item: data, itemsCount: selectedContent.length }, callback);\n    }\n\n    /**\n     * Toggles visible panel state\n     *\n     * @method togglePanel\n     * @param {String} activeTab\n     */\n    togglePanel(activeTab) {\n        this.setState(() => ({ activeTab, ...CONTENT_META_PREVIEW_BASE_STATE }));\n    }\n\n    /**\n     * Closes CMP (Content Meta Preview)\n     *\n     * @method closeContentMetaPreview\n     */\n    closeContentMetaPreview() {\n        this.setState(() => ({ ...CONTENT_META_PREVIEW_BASE_STATE }));\n    }\n\n    /**\n     * Sets content types map state\n     *\n     * @method setContentTypesMap\n     * @param {Object} response\n     */\n    setContentTypesMap(response) {\n        if (!response || !response.ContentTypeInfoList) {\n            return;\n        }\n\n        const contentTypesMap = response.ContentTypeInfoList.ContentType.reduce((total, item) => {\n            total[item._href] = item;\n\n            return total;\n        }, {});\n\n        this.setState(() => ({ contentTypesMap }));\n    }\n\n    /**\n     * Renders content meta preview\n     *\n     * @method renderContentMetaPreview\n     * @returns {Element}\n     */\n    renderContentMetaPreview() {\n        if (!this.state.contentMeta) {\n            return null;\n        }\n\n        const { contentTypesMap, maxHeight, activeTab, contentMeta, isPreviewMetaReady } = this.state;\n        const { loadContentInfo, restInfo, languages } = this.props;\n        const isContentBookmarked = this.isBookmarked(contentMeta.id);\n\n        return (\n            <div className=\"m-ud__preview\">\n                <ContentMetaPreviewComponent\n                    data={contentMeta}\n                    isBookmarked={isContentBookmarked}\n                    canSelectContent={this.canSelectContent}\n                    toggleBookmark={this.toggleBookmark}\n                    loadContentInfo={loadContentInfo}\n                    restInfo={restInfo}\n                    contentTypesMap={contentTypesMap}\n                    languages={languages}\n                    maxHeight={maxHeight}\n                    activeTab={activeTab}\n                    ready={isPreviewMetaReady}\n                />\n            </div>\n        );\n    }\n\n    /**\n     * Renders selected content list\n     *\n     * @method renderSelectedContent\n     * @returns {Element}\n     */\n    renderSelectedContent() {\n        const items = this.state.selectedContent;\n        const { selectedItemsLimit, multiple } = this.props;\n\n        if (this.state.activeTab === TAB_CREATE || !multiple) {\n            return null;\n        }\n\n        return (\n            <div className=\"m-ud__selected-content\">\n                <SelectedContentComponent\n                    items={items}\n                    itemsLimit={selectedItemsLimit}\n                    onItemRemove={this.onItemRemove}\n                    multiple={multiple}\n                    contentTypesMap={this.state.contentTypesMap}\n                />\n            </div>\n        );\n    }\n\n    /**\n     * Gets a specific tab config\n     *\n     * @method getTabConfig\n     * @param {String} id\n     * @param {String} iconIdentifier\n     * @returns {Object}\n     */\n    getTabConfig(id, iconIdentifier) {\n        return {\n            id,\n            iconIdentifier: iconIdentifier ? iconIdentifier : id,\n            title: this.tabsLabels[id],\n            onClick: this.togglePanel,\n            isSelected: this.state.activeTab === id,\n        };\n    }\n\n    /**\n     * Renders tabs\n     *\n     * @method renderTabs\n     * @returns {Element}\n     */\n    renderTabs() {\n        const { extraTabs, visibleTabs, onlyContentOnTheFly } = this.props;\n\n        const browseTabConfig = this.getTabConfig(TAB_BROWSE);\n        const searchTabConfig = this.getTabConfig(TAB_SEARCH);\n        const createTabConfig = this.getTabConfig(TAB_CREATE);\n        const bookmarksTabConfig = this.getTabConfig(TAB_BOOKMARKS, 'bookmark');\n\n        let tabsToRender = [browseTabConfig, searchTabConfig, createTabConfig, bookmarksTabConfig, ...extraTabs];\n\n        // @Deprecated - `onlyContentOnTheFly` will be removed in 2.0\n        if (visibleTabs.length === 1 || onlyContentOnTheFly) {\n            return null;\n        }\n\n        if (visibleTabs.length) {\n            tabsToRender = visibleTabs.map((tab) => {\n                return tabsToRender.find((config) => config.id === tab);\n            });\n        }\n\n        return <nav className=\"m-ud__nav\">{tabsToRender.map(this.renderSingleTab)}</nav>;\n    }\n\n    /**\n     * Renders a single tabs\n     *\n     * @method renderSingleTab\n     * @param {Object} tab\n     * @returns {Element}\n     */\n    renderSingleTab(tab) {\n        const attrs = { id: tab.id, title: tab.title, onClick: this.togglePanel, isSelected: this.state.activeTab === tab.id };\n\n        if (tab.iconIdentifier) {\n            attrs.iconIdentifier = tab.iconIdentifier;\n        }\n\n        return <TabNavItemComponent key={`panel-${tab.id}`} {...attrs} />;\n    }\n\n    /**\n     * Renders panels\n     *\n     * @method renderPanels\n     * @returns {Element}\n     */\n    renderPanels() {\n        const {\n            extraTabs,\n            visibleTabs,\n            sortFieldMappings,\n            sortOrderMappings,\n            languages,\n            contentTypes,\n            cotfPreselectedContentType,\n            cotfForcedLanguage,\n            cotfAllowedLanguages,\n            cotfPreselectedLanguage,\n            cotfAllowedContentTypes,\n            cotfPreselectedLocation,\n            cotfAllowedLocations,\n            onlyContentOnTheFly,\n        } = this.props;\n        const { userBookmarksItems, userBookmarksCount, contentTypesMap } = this.state;\n        const browsePanelConfig = { id: TAB_BROWSE, panel: FinderPanelComponent, attrs: { sortFieldMappings, sortOrderMappings } };\n        const searchPanelConfig = { id: TAB_SEARCH, panel: SearchPanelComponent };\n        const bookmarksPanelConfig = {\n            id: TAB_BOOKMARKS,\n            panel: BookmarksPanelComponent,\n            attrs: { userBookmarksItems, userBookmarksCount, requireBookmarksCount: this.requireBookmarksCount },\n        };\n        const createPanelConfig = {\n            id: TAB_CREATE,\n            panel: CreatePanelComponent,\n            attrs: {\n                languages,\n                contentTypes,\n                onLanguageSelected: this.onLanguageSelected,\n                onContentTypeSelected: this.onContentTypeSelected,\n                contentTypesMap: this.state.contentTypesMap,\n                forcedLanguage: cotfForcedLanguage,\n                preselectedLanguage: cotfPreselectedLanguage,\n                allowedLanguages: cotfAllowedLanguages,\n                preselectedContentType: cotfPreselectedContentType,\n                allowedContentTypes: cotfAllowedContentTypes,\n                preselectedLocation: cotfPreselectedLocation,\n                allowedLocations: cotfAllowedLocations,\n                sortFieldMappings,\n                sortOrderMappings,\n            },\n        };\n        let panelsToRender = [browsePanelConfig, searchPanelConfig, createPanelConfig, bookmarksPanelConfig, ...extraTabs];\n\n        if (!Object.keys(contentTypesMap).length) {\n            return null;\n        }\n\n        if (onlyContentOnTheFly) {\n            console.warn('[DEPRECATED] onlyContentOnTheFly parameter is deprecated');\n            console.warn('[DEPRECATED] it will be removed from ezplatform-admin-ui-modules 2.0');\n            console.warn('[DEPRECATED] use visibleTabs instead');\n\n            return <div className=\"m-ud__panels\">{this.renderSinglePanel(createPanelConfig)}</div>;\n        }\n\n        if (visibleTabs.length) {\n            panelsToRender = visibleTabs.map((tab) => panelsToRender.find((config) => config.id === tab));\n        }\n\n        return <div className=\"m-ud__panels\">{panelsToRender.map(this.renderSinglePanel)}</div>;\n    }\n\n    /**\n     * Renders a single panel\n     *\n     * @method renderSinglePanel\n     * @param {Object} item\n     * @returns {Element}\n     */\n    renderSinglePanel(item) {\n        const Panel = item.panel;\n        const {\n            startingLocationId,\n            findLocationsByParentLocationId,\n            findContentBySearchQuery,\n            multiple,\n            searchResultsPerPage,\n            bookmarksPerPage,\n            restInfo,\n            allowContainersOnly,\n        } = this.props;\n\n        const { activeTab, maxHeight, contentTypesMap, selectedContent } = this.state;\n        const isVisible = activeTab === item.id;\n\n        if (!isVisible) {\n            return null;\n        }\n\n        const attrs = {\n            isVisible,\n            onItemSelect: this.onItemSelect,\n            maxHeight: maxHeight - 32,\n            id: item.id,\n            allowContainersOnly,\n            startingLocationId,\n            findLocationsByParentLocationId,\n            findContentBySearchQuery,\n            contentTypesMap,\n            multiple,\n            searchResultsPerPage,\n            bookmarksPerPage,\n            restInfo,\n            selectedContent,\n            onSelectContent: this.updateSelectedContent,\n            canSelectContent: this.canSelectContent,\n            onItemRemove: this.onItemRemove,\n            ...item.attrs,\n        };\n\n        return <Panel key={`panel-${item.id}`} {...attrs} />;\n    }\n\n    /**\n     * Renders a confirm button\n     *\n     * @method renderConfirmBtn\n     * @returns {Element}\n     */\n    renderConfirmBtn() {\n        const { activeTab, selectedContent, canSelectContent, isPreviewMetaReady } = this.state;\n        const { multiple } = this.props;\n        const onClick = multiple ? this.handleConfirm : this.handleSingleConfirm;\n        const attrs = {\n            className: 'm-ud__action m-ud__action--confirm',\n            type: 'button',\n            onClick,\n        };\n\n        if (activeTab === TAB_CREATE) {\n            return null;\n        }\n\n        if ((multiple && !selectedContent.length) || (!multiple && (!isPreviewMetaReady || !canSelectContent))) {\n            attrs.disabled = true;\n            attrs.title = 'The Content Type is not allowed for selection';\n        }\n\n        const confirmBtnLabel = Translator.trans(/*@Desc(\"Confirm\")*/ 'confirm.label', {}, 'universal_discovery_widget');\n\n        return <button {...attrs}>{confirmBtnLabel}</button>;\n    }\n\n    /**\n     * Does a permission checking\n     *\n     * @method renderSinglePanel\n     * @param {Object} item\n     * @returns {Element}\n     */\n    checkPermission() {\n        checkCreatePermission(\n            {\n                token: this.props.restInfo.token,\n                contentTypeIdentifier: this.state.selectedContentType.identifier,\n                languageCode: this.state.selectedLanguage.languageCode,\n                locationId: this.state.contentMeta.id,\n            },\n            this.updatePermissionsState\n        );\n    }\n\n    /**\n     * Updates a permission state\n     *\n     * @method updatePermissionsState\n     * @param {Object} response\n     */\n    updatePermissionsState(response) {\n        this.setState(() => ({ hasPermission: response.access }));\n    }\n\n    /**\n     * Renders a create content button\n     *\n     * @method renderCreateBtn\n     * @returns {Element}\n     */\n    renderCreateBtn() {\n        const isDataSelected = this.state.selectedLanguage && this.state.selectedContentType.identifier && this.state.contentMeta;\n        const attrs = {\n            type: 'button',\n            className: 'm-ud__action m-ud__action--create-content',\n            onClick: this.setCreateModeState,\n            disabled: !this.state.hasPermission || !isDataSelected || !this.state.isLocationAllowed,\n        };\n\n        if (this.state.activeTab !== TAB_CREATE) {\n            return null;\n        }\n\n        if (isDataSelected) {\n            this.checkPermission();\n        }\n\n        const createContentLabel = Translator.trans(\n            /*@Desc(\"Create content\")*/ 'content_on_the_fly.create_content.label',\n            {},\n            'universal_discovery_widget'\n        );\n\n        return <button {...attrs}>{createContentLabel}</button>;\n    }\n\n    /**\n     * Renders permission error\n     *\n     * @method renderPermissionError\n     * @returns {Element}\n     */\n    renderPermissionError() {\n        const isDataSelected = this.state.selectedLanguage && this.state.selectedContentType && this.state.contentMeta;\n\n        if (this.state.hasPermission || !isDataSelected) {\n            return null;\n        }\n\n        const noPermissionMessage = Translator.trans(\n            /*@Desc(\"Sorry, but you don't have permission for this action. Please contact your site Admin.\")*/ 'content_on_the_fly.no_permission.message',\n            {},\n            'universal_discovery_widget'\n        );\n\n        return <span className=\"m-ud__no-permission\">{noPermissionMessage}</span>;\n    }\n\n    /**\n     * Renders not allowed location error\n     *\n     * @method renderNotAllowedLocationError\n     * @returns {Element}\n     */\n    renderNotAllowedLocationError() {\n        const isDataSelected = this.state.selectedLanguage && this.state.selectedContentType && this.state.contentMeta;\n\n        if (this.state.isLocationAllowed || !isDataSelected || this.state.activeTab !== TAB_CREATE) {\n            return null;\n        }\n\n        const locationNotAllowedMessage = Translator.trans(\n            /*@Desc(\"Sorry, but this location is not selectable.\")*/ 'content_on_the_fly.location_not_allowed.message',\n            {},\n            'universal_discovery_widget'\n        );\n\n        return <span className=\"m-ud__location-not-allowed\">{locationNotAllowedMessage}</span>;\n    }\n\n    setMainContainerRef(ref) {\n        this._refMainContainer = ref;\n    }\n\n    setContentContainerRef(ref) {\n        this._refContentContainer = ref;\n    }\n\n    render() {\n        const componentClassName = 'm-ud';\n        const metaPreviewClassName = !!this.state.contentMeta ? `${componentClassName}--with-preview` : '';\n        const selectedContentClassName = this.state.selectedContent.length ? `${componentClassName}--with-selected-content` : '';\n        const containerClassName = `${componentClassName} ${selectedContentClassName} ${metaPreviewClassName}`;\n        const isDataSelected = this.state.selectedLanguage && this.state.selectedContentType.identifier && this.state.contentMeta;\n\n        if (this.state.isCreateMode && this.state.activeTab === TAB_CREATE && isDataSelected && this.state.hasPermission) {\n            return (\n                <ContentCreatorComponent\n                    maxHeight={this.state.maxHeight}\n                    selectedLanguage={this.state.selectedLanguage}\n                    selectedContentType={this.state.selectedContentType}\n                    selectedLocationId={this.state.contentMeta.id}\n                    onCancel={this.props.onCancel}\n                    handlePublish={this.handlePublish}\n                    restInfo={this.props.restInfo}\n                    setMainContainerRef={this.setMainContainerRef}\n                />\n            );\n        }\n\n        const cancelBtnLabel = Translator.trans(/*@Desc(\"Cancel\")*/ 'cancel.label', {}, 'universal_discovery_widget');\n\n        return (\n            <div className=\"m-ud__wrapper\">\n                <div className={containerClassName} ref={this.setMainContainerRef}>\n                    <h1 className=\"m-ud__title\">{this.props.title}</h1>\n                    <div className=\"m-ud__content-wrapper\">\n                        {this.renderTabs()}\n                        <div className=\"m-ud__content\" ref={this.setContentContainerRef}>\n                            {this.renderPanels()}\n                            {this.renderContentMetaPreview()}\n                        </div>\n                        <div className=\"m-ud__actions\">\n                            {this.renderSelectedContent()}\n                            <div className=\"m-ud__btns\">\n                                {this.renderPermissionError()}\n                                {this.renderNotAllowedLocationError()}\n                                <button type=\"button\" className=\"m-ud__action m-ud__action--cancel\" onClick={this.props.onCancel}>\n                                    {cancelBtnLabel}\n                                </button>\n                                {this.renderConfirmBtn()}\n                                {this.renderCreateBtn()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\neZ.addConfig('modules.UniversalDiscovery', UniversalDiscoveryModule);\n\nUniversalDiscoveryModule.propTypes = {\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    restInfo: PropTypes.shape({\n        token: PropTypes.string.isRequired,\n        siteaccess: PropTypes.string.isRequired,\n    }).isRequired,\n    title: PropTypes.string,\n    multiple: PropTypes.bool,\n    activeTab: PropTypes.string,\n    loadContentInfo: PropTypes.func,\n    loadContentTypes: PropTypes.func,\n    canSelectContent: PropTypes.func,\n    selectedItemsLimit: PropTypes.number,\n    startingLocationId: PropTypes.number,\n    findContentBySearchQuery: PropTypes.func,\n    findLocationsByParentLocationId: PropTypes.func,\n    extraTabs: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            panel: PropTypes.func.isRequired,\n            attrs: PropTypes.object,\n        })\n    ),\n    maxHeight: PropTypes.number,\n    searchResultsPerPage: PropTypes.number,\n    bookmarksPerPage: PropTypes.number,\n    languages: PropTypes.object,\n    contentTypes: PropTypes.object,\n    allowContainersOnly: PropTypes.bool.isRequired,\n\n    // @Deprecated - to be removed in 2.0\n    onlyContentOnTheFly: PropTypes.bool,\n    // @Deprecated - to be removed in 2.0\n    cotfForcedLanguage: PropTypes.string,\n\n    cotfPreselectedLanguage: PropTypes.string,\n    cotfAllowedLanguages: PropTypes.array,\n    cotfPreselectedContentType: PropTypes.string,\n    cotfAllowedContentTypes: PropTypes.array,\n    cotfPreselectedLocation: PropTypes.number,\n    cotfAllowedLocations: PropTypes.array,\n    visibleTabs: PropTypes.array,\n    sortFieldMappings: PropTypes.object.isRequired,\n    sortOrderMappings: PropTypes.object.isRequired,\n};\n\nUniversalDiscoveryModule.defaultProps = {\n    title: 'Find content',\n    multiple: true,\n    selectedItemsLimit: 0,\n    activeTab: TAB_BROWSE,\n    loadContentInfo,\n    loadContentTypes,\n    findContentBySearchQuery,\n    findLocationsByParentLocationId,\n    canSelectContent: (item, callback) => callback(true),\n    extraTabs: window.eZ.adminUiConfig.universalDiscoveryWidget.extraTabs || [],\n    startingLocationId: 1,\n    maxHeight: 500,\n    searchResultsPerPage: 10,\n    bookmarksPerPage: 10,\n    languages: window.eZ.adminUiConfig.languages,\n    contentTypes: window.eZ.adminUiConfig.contentTypes,\n    allowContainersOnly: false,\n    onlyContentOnTheFly: false,\n    cotfForcedLanguage: '',\n    cotfPreselectedLanguage: '',\n    cotfAllowedLanguages: [],\n    cotfPreselectedContentType: '',\n    cotfAllowedContentTypes: [],\n    cotfPreselectedLocation: null,\n    cotfAllowedLocations: [],\n    visibleTabs: [],\n    sortFieldMappings: window.eZ.adminUiConfig.sortFieldMappings,\n    sortOrderMappings: window.eZ.adminUiConfig.sortOrderMappings,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/universal.discovery.module.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../../../common/icon/icon';\n\nconst TabNavItemComponent = (props) => {\n    const attrs = {\n        type: 'button',\n        className: `c-tab-nav-item ${props.isSelected ? 'c-tab-nav-item--selected' : ''}`,\n        onClick: () => props.onClick(props.id),\n    };\n\n    return (\n        <div className=\"c-tab-nav-item__wrapper\">\n            <button {...attrs}>\n                <Icon name={props.iconIdentifier} extraClasses=\"c-tab-nav-item__icon ez-icon--small\" />\n                {props.title}\n            </button>\n        </div>\n    );\n};\n\nTabNavItemComponent.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    iconIdentifier: PropTypes.string.isRequired,\n};\n\nexport default TabNavItemComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/tab-nav/tab.nav.item.component.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TabContentPanelComponent from './tab.content.panel.component';\nimport FinderComponent from '../finder/finder.component';\n\nconst FinderPanelComponent = (props) => {\n    const wrapperAttrs = { className: 'c-finder-panel' };\n\n    if (!props.isVisible) {\n        wrapperAttrs.hidden = true;\n    }\n\n    return (\n        <div {...wrapperAttrs}>\n            <TabContentPanelComponent {...props}>\n                <FinderComponent {...props} />\n            </TabContentPanelComponent>\n        </div>\n    );\n};\n\nFinderPanelComponent.propTypes = {\n    isVisible: PropTypes.bool.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    startingLocationId: PropTypes.number.isRequired,\n    findLocationsByParentLocationId: PropTypes.func.isRequired,\n    onItemSelect: PropTypes.func.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    restInfo: PropTypes.shape({\n        token: PropTypes.string.isRequired,\n        siteaccess: PropTypes.string.isRequired,\n    }).isRequired,\n    allowContainersOnly: PropTypes.bool.isRequired,\n    sortFieldMappings: PropTypes.object.isRequired,\n    sortOrderMappings: PropTypes.object.isRequired,\n    selectedContent: PropTypes.array.isRequired,\n    onSelectContent: PropTypes.func.isRequired,\n    canSelectContent: PropTypes.func.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n};\n\nexport default FinderPanelComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/tab-content/finder.panel.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FinderTreeLeafComponent from './finder.tree.leaf.component';\n\nexport default class FinderTreeBranchComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.expandBranch = this.expandBranch.bind(this);\n        this.onLoadMore = this.onLoadMore.bind(this);\n        this.removeLoadingStateFromItem = this.removeLoadingStateFromItem.bind(this);\n        this.updateSelectedLocations = this.updateSelectedLocations.bind(this);\n        this.renderLeaf = this.renderLeaf.bind(this);\n\n        this.state = {\n            currentlyLoadingLocationId: false,\n            selectedLocationId: null,\n        };\n    }\n\n    /**\n     * Updates selected locations state\n     *\n     * @method updateSelectedLocations\n     * @param {Object} location location struct\n     * @memberof FinderTreeBranchComponent\n     */\n    updateSelectedLocations(location) {\n        this.setState(\n            () => ({ currentlyLoadingLocationId: location.id, selectedLocationId: location.id }),\n            () =>\n                this.props.onItemClick({\n                    parent: location.id,\n                    location,\n                    onDataLoaded: this.removeLoadingStateFromItem,\n                })\n        );\n    }\n\n    removeLoadingStateFromItem() {\n        this.setState(() => ({ currentlyLoadingLocationId: false }));\n    }\n\n    expandBranch() {\n        this.props.onBranchClick(this.props.parentLocation);\n    }\n\n    /**\n     * Renders leaf (the single content item)\n     *\n     * @method renderLeaf\n     * @param {Object} data location response\n     * @returns {Element}\n     * @memberof FinderTreeBranchComponent\n     */\n    renderLeaf(data) {\n        const location = data.value.Location;\n        const isLoadingChildren = location.id === this.state.currentlyLoadingLocationId;\n        const contentTypesMap = this.props.contentTypesMap;\n        const contentTypeHref = location.ContentInfo.Content.ContentType._href;\n        const isContainer = contentTypesMap && contentTypesMap[contentTypeHref] && contentTypesMap[contentTypeHref].isContainer;\n        const isSelectable = !(this.props.allowContainersOnly && !isContainer);\n        const selected = location.id === this.state.selectedLocationId;\n\n        return (\n            <FinderTreeLeafComponent\n                key={location.remoteId}\n                location={location}\n                onClick={this.updateSelectedLocations}\n                selected={selected}\n                isLoadingChildren={isLoadingChildren}\n                isSelectable={isSelectable}\n                allowedLocations={this.props.allowedLocations}\n                multiple={this.props.multiple}\n                selectedContent={this.props.selectedContent}\n                onSelectContent={this.props.onSelectContent}\n                canSelectContent={this.props.canSelectContent}\n                onItemRemove={this.props.onItemRemove}\n                contentTypesMap={this.props.contentTypesMap}\n            />\n        );\n    }\n\n    onLoadMore() {\n        this.props.onLoadMore(this.props.parentLocation);\n    }\n\n    /**\n     * Render load more button\n     *\n     * @method renderLoadMore\n     * @returns {Element}\n     * @memberof FinderTreeBranchComponent\n     */\n    renderLoadMore() {\n        const { items, total } = this.props;\n\n        if (!items.length || items.length === total) {\n            return null;\n        }\n\n        const loadMoreLabel = Translator.trans(/*@Desc(\"Load more\")*/ 'finder.branch.load_more.label', {}, 'universal_discovery_widget');\n\n        return (\n            <button type=\"button\" className=\"c-finder-tree-branch__load-more\" onClick={this.onLoadMore}>\n                {loadMoreLabel}\n            </button>\n        );\n    }\n\n    render() {\n        const items = this.props.items;\n        const attrs = {\n            className: 'c-finder-tree-branch',\n            style: { height: `${this.props.maxHeight}px` },\n        };\n\n        if (!items.length) {\n            attrs.className = `${attrs.className} c-finder-tree-branch--collapsed`;\n            attrs.onClick = this.expandBranch;\n        }\n\n        return (\n            <div {...attrs}>\n                <div className=\"c-finder-tree-branch__list-wrapper\">\n                    {this.props.items.map(this.renderLeaf)}\n                    {this.renderLoadMore()}\n                </div>\n            </div>\n        );\n    }\n}\n\nFinderTreeBranchComponent.propTypes = {\n    items: PropTypes.array.isRequired,\n    total: PropTypes.number.isRequired,\n    parentLocation: PropTypes.object,\n    onItemClick: PropTypes.func.isRequired,\n    onBranchClick: PropTypes.func.isRequired,\n    selectedLocations: PropTypes.array.isRequired,\n    onLoadMore: PropTypes.func.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    allowContainersOnly: PropTypes.bool,\n    contentTypesMap: PropTypes.object,\n    allowedLocations: PropTypes.array.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    selectedContent: PropTypes.array.isRequired,\n    onSelectContent: PropTypes.func.isRequired,\n    canSelectContent: PropTypes.func.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/finder/finder.tree.branch.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SelectContentButtonComponent from '../select-content-button/select.content.button.component';\nimport Icon from '../../../common/icon/icon';\n\nexport default class FinderTreeLeafComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    /**\n     * Handles clicks on a leaf\n     *\n     * @method handleClick\n     * @memberof FinderTreeLeafComponent\n     */\n    handleClick(event) {\n        const { location, isSelectable, onClick } = this.props;\n\n        if (!isSelectable || event.target.closest('.c-finder-tree-leaf__btn--toggle-selection')) {\n            return;\n        }\n\n        onClick(location);\n    }\n\n    getContentTypeIdentifier() {\n        const { contentTypesMap, location } = this.props;\n        const contentTypeHref = location.ContentInfo.Content.ContentType._href;\n        const contentType = contentTypesMap ? contentTypesMap[contentTypeHref] : null;\n        const contentTypeIdentifier = contentType ? contentType.identifier : null;\n\n        return contentTypeIdentifier;\n    }\n\n    /**\n     * Renders an icon of a content type\n     *\n     * @method renderIcon\n     * @returns {JSX.Element|null}\n     */\n    renderIcon() {\n        const contentTypeIdentifier = this.getContentTypeIdentifier();\n\n        if (!contentTypeIdentifier) {\n            return null;\n        }\n\n        const contentTypeIconUrl = eZ.helpers.contentType.getContentTypeIconUrl(contentTypeIdentifier);\n        let extraClasses = 'ez-icon--small';\n\n        if (this.props.selected) {\n            extraClasses = `${extraClasses} ez-icon--light`;\n        }\n\n        return (\n            <div className=\"c-finder-tree-leaf__icon\">\n                <Icon customPath={contentTypeIconUrl} extraClasses={extraClasses} />\n            </div>\n        );\n    }\n\n    /**\n     * Renders a loading state icon\n     *\n     * @method renderLoadingIcon\n     * @returns {JSX.Element|null}\n     * @memberof FinderTreeLeafComponent\n     */\n    renderLoadingIcon() {\n        if (!this.props.selected || !this.props.isLoadingChildren) {\n            return null;\n        }\n\n        return <Icon name=\"spinner\" extraClasses=\"ez-spin ez-icon-x2 ez-icon--small ez-icon--light c-finder-tree-leaf__loading-icon\" />;\n    }\n\n    renderSelectContentBtn() {\n        const {\n            isSelectable,\n            multiple,\n            selectedContent,\n            location,\n            onSelectContent,\n            onItemRemove,\n            canSelectContent,\n            isLoadingChildren,\n        } = this.props;\n\n        if (!isSelectable || isLoadingChildren || !multiple) {\n            return null;\n        }\n\n        return (\n            <SelectContentButtonComponent\n                multiple={multiple}\n                isSelected={!!selectedContent.find((content) => content.id === location.id)}\n                location={location}\n                onSelectContent={onSelectContent}\n                onItemRemove={onItemRemove}\n                canSelectContent={canSelectContent}\n            />\n        );\n    }\n\n    render() {\n        const { location, selected, isSelectable, isLoadingChildren, allowedLocations } = this.props;\n        const isForcedLocation = allowedLocations.length === 1;\n        const componentClassName = 'c-finder-tree-leaf';\n        const isSelectedClassName = selected ? `${componentClassName}--selected` : '';\n        const isNotSelectableClassName = !isSelectable || isForcedLocation ? `${componentClassName}--not-selectable` : '';\n        const hasChildrenClassName = location.childCount ? `${componentClassName}--has-children` : '';\n        const isLoadingChildrenClassName = isLoadingChildren ? `${componentClassName}--loading` : '';\n        const attrs = {\n            className: [\n                componentClassName,\n                isSelectedClassName,\n                hasChildrenClassName,\n                isLoadingChildrenClassName,\n                isNotSelectableClassName,\n            ].join(' '),\n        };\n\n        if (!isForcedLocation) {\n            attrs.onClick = this.handleClick;\n        }\n\n        return (\n            <div {...attrs}>\n                {this.renderIcon()}\n                {location.ContentInfo.Content.Name}\n                {this.renderLoadingIcon()}\n                {this.renderSelectContentBtn()}\n            </div>\n        );\n    }\n}\n\nFinderTreeLeafComponent.propTypes = {\n    location: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    selected: PropTypes.bool.isRequired,\n    isLoadingChildren: PropTypes.bool.isRequired,\n    isSelectable: PropTypes.bool.isRequired,\n    allowedLocations: PropTypes.array.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    selectedContent: PropTypes.array.isRequired,\n    onSelectContent: PropTypes.func.isRequired,\n    canSelectContent: PropTypes.func.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n    contentTypesMap: PropTypes.object.isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/finder/finder.tree.leaf.component.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TabContentPanelComponent from './tab.content.panel.component';\nimport SearchComponent from '../search/search.component';\n\nconst SearchPanelComponent = (props) => {\n    const wrapperAttrs = { className: 'c-search-panel' };\n    const {\n        multiple,\n        findContentBySearchQuery,\n        onItemSelect,\n        maxHeight,\n        contentTypesMap,\n        searchResultsPerPage,\n        restInfo,\n        selectedContent,\n        onSelectContent,\n        canSelectContent,\n        onItemRemove,\n    } = props;\n    const searchAttrs = Object.assign(\n        {},\n        {\n            multiple,\n            findContentBySearchQuery,\n            onItemSelect,\n            maxHeight,\n            contentTypesMap,\n            searchResultsPerPage,\n            restInfo,\n            selectedContent,\n            onSelectContent,\n            canSelectContent,\n            onItemRemove,\n        }\n    );\n\n    if (!props.isVisible) {\n        wrapperAttrs.hidden = true;\n    }\n\n    return (\n        <div {...wrapperAttrs}>\n            <TabContentPanelComponent {...props}>\n                <SearchComponent {...searchAttrs} />\n            </TabContentPanelComponent>\n        </div>\n    );\n};\n\nSearchPanelComponent.propTypes = {\n    isVisible: PropTypes.bool.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    onItemSelect: PropTypes.func.isRequired,\n    findContentBySearchQuery: PropTypes.func.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    contentTypesMap: PropTypes.object.isRequired,\n    searchResultsPerPage: PropTypes.number.isRequired,\n    restInfo: PropTypes.shape({\n        token: PropTypes.string.isRequired,\n        siteaccess: PropTypes.string.isRequired,\n    }).isRequired,\n    selectedContent: PropTypes.array.isRequired,\n    onSelectContent: PropTypes.func.isRequired,\n    canSelectContent: PropTypes.func.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n};\n\nexport default SearchPanelComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/tab-content/search.panel.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../../../common/icon/icon';\nimport ContentTableComponent from '../content-table/content.table.component';\n\nexport default class SearchComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: [],\n            isSearching: false,\n            submitDisabled: true,\n        };\n\n        this.updateItemsState = this.updateItemsState.bind(this);\n        this.searchContent = this.searchContent.bind(this);\n        this.onRequireItemsCount = this.onRequireItemsCount.bind(this);\n        this.toggleSubmitButtonState = this.toggleSubmitButtonState.bind(this);\n        this.setSearchInputRef = this.setSearchInputRef.bind(this);\n    }\n\n    /**\n     * Searches content by a query\n     *\n     * @method searchContent\n     * @param {Event} event\n     * @memberof SearchComponent\n     */\n    searchContent(event) {\n        const isClickEvent = event.nativeEvent.type === 'click';\n        const isEnterKeyEvent = event.nativeEvent.type === 'keyup' && event.nativeEvent.keyCode === 13;\n\n        if (this.state.submitDisabled || (!isClickEvent && !isEnterKeyEvent)) {\n            return;\n        }\n\n        this.setState(\n            () => ({ isSearching: true }),\n            () => {\n                const promise = new Promise((resolve) =>\n                    this.props.findContentBySearchQuery(this.props.restInfo, this._refSearchInput.value, resolve)\n                );\n\n                promise\n                    .then(this.updateItemsState)\n                    .catch(() => window.eZ.helpers.notification.showErrorNotification('Cannot find content'));\n            }\n        );\n    }\n\n    /**\n     * Updates items state with search results\n     *\n     * @param {Object} response content query REST endpoint response\n     * @memberof SearchComponent\n     */\n    updateItemsState(response) {\n        this.setState(() => ({\n            items: response.View.Result.searchHits.searchHit.map((item) => item.value),\n            isSearching: false,\n        }));\n    }\n\n    /**\n     * Checks whether a requested amount items fits the actual number of items.\n     *\n     * @method onRequireItemsCount\n     * @param {Number} count\n     */\n    onRequireItemsCount(count) {\n        const { items } = this.state;\n\n        if (count > items.length) {\n            throw new Error('All items loaded.');\n        }\n    }\n\n    /**\n     * Renders the submit button\n     *\n     * @method renderSubmitBtn\n     */\n    renderSubmitBtn() {\n        const btnAttrs = { className: 'c-search__submit', type: 'button' };\n        let svgExtraClasses = 'ez-icon--small ez-icon--light';\n        const btnLabel = Translator.trans(/*@Desc(\"Search\")*/ 'search.submit.label', {}, 'universal_discovery_widget');\n        let iconIdentifier = 'search';\n\n        if (this.state.isSearching) {\n            btnAttrs.className = `${btnAttrs.className} c-search__submit--loading`;\n            btnAttrs.disabled = true;\n            svgExtraClasses = `${svgExtraClasses} ez-spin ez-icon-x2 ez-icon-spinner`;\n            iconIdentifier = 'spinner';\n        } else if (this.state.submitDisabled) {\n            btnAttrs.disabled = true;\n        } else {\n            btnAttrs.onClick = this.searchContent;\n        }\n\n        return (\n            <button {...btnAttrs}>\n                <Icon name={iconIdentifier} extraClasses={svgExtraClasses} />\n                {!this.state.isSearching && btnLabel}\n            </button>\n        );\n    }\n\n    /**\n     * Toggles the submit button state.\n     * Disables it when the search query is empty.\n     *\n     * @method toggleSubmitButtonState\n     */\n    toggleSubmitButtonState() {\n        this.setState(() => ({ submitDisabled: !this._refSearchInput.value.trim().length }));\n    }\n\n    /**\n     * Set a reference to the search input HTMLElement node\n     *\n     * @method setSearchInputRef\n     * @param {HTMLElement} ref\n     */\n    setSearchInputRef(ref) {\n        this._refSearchInput = ref;\n    }\n\n    render() {\n        const {\n            onItemSelect,\n            searchResultsPerPage,\n            contentTypesMap,\n            maxHeight,\n            selectedContent,\n            onSelectContent,\n            canSelectContent,\n            onItemRemove,\n            multiple,\n        } = this.props;\n        const title = Translator.trans(/*@Desc(\"Search\")*/ 'search.title', {}, 'universal_discovery_widget');\n        const tableTitle = Translator.trans(/*@Desc(\"Search results\")*/ 'search.content_table.title', {}, 'universal_discovery_widget');\n\n        return (\n            <div className=\"c-search\" style={{ maxHeight: `${maxHeight - 32}px` }}>\n                <div className=\"c-search__title\">{title}:</div>\n                <div className=\"c-search__form\">\n                    <input\n                        className=\"c-search__input\"\n                        type=\"text\"\n                        ref={this.setSearchInputRef}\n                        onKeyUp={this.searchContent}\n                        onChange={this.toggleSubmitButtonState}\n                    />\n                    {this.renderSubmitBtn()}\n                </div>\n                <ContentTableComponent\n                    items={this.state.items}\n                    count={this.state.items.length}\n                    requireItemsCount={this.onRequireItemsCount}\n                    onItemSelect={onItemSelect}\n                    perPage={searchResultsPerPage}\n                    contentTypesMap={contentTypesMap}\n                    title={tableTitle}\n                    selectedContent={selectedContent}\n                    onSelectContent={onSelectContent}\n                    canSelectContent={canSelectContent}\n                    onItemRemove={onItemRemove}\n                    multiple={multiple}\n                />\n            </div>\n        );\n    }\n}\n\nSearchComponent.propTypes = {\n    findContentBySearchQuery: PropTypes.func.isRequired,\n    onItemSelect: PropTypes.func.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    contentTypesMap: PropTypes.object.isRequired,\n    searchResultsPerPage: PropTypes.number.isRequired,\n    restInfo: PropTypes.shape({\n        token: PropTypes.string.isRequired,\n        siteaccess: PropTypes.string.isRequired,\n    }).isRequired,\n    selectedContent: PropTypes.array.isRequired,\n    onSelectContent: PropTypes.func.isRequired,\n    canSelectContent: PropTypes.func.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n    multiple: PropTypes.bool.isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/search/search.component.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContentTablePaginationComponent = (props) => {\n    const { minIndex, activeIndex, maxIndex, onChange } = props;\n    const btnFirstLabel = Translator.trans(/*@Desc(\"First\")*/ 'pagination.first', {}, 'universal_discovery_widget');\n    const btnPrevLabel = Translator.trans(/*@Desc(\"Previous\")*/ 'pagination.prev', {}, 'universal_discovery_widget');\n    const btnNextLabel = Translator.trans(/*@Desc(\"Next\")*/ 'pagination.next', {}, 'universal_discovery_widget');\n    const btnLastLabel = Translator.trans(/*@Desc(\"Last\")*/ 'pagination.last', {}, 'universal_discovery_widget');\n    const btnClass = 'c-content-table-pagination__btn';\n    const firstAttrs = {\n        type: 'button',\n        onClick: () => onChange(minIndex),\n        className: `${btnClass} ${btnClass}--first`,\n    };\n    const prevAttrs = {\n        type: 'button',\n        onClick: () => onChange(activeIndex - 1),\n        className: `${btnClass} ${btnClass}--prev ${btnClass}--middle`,\n    };\n    const nextAttrs = {\n        type: 'button',\n        onClick: () => onChange(activeIndex + 1),\n        className: `${btnClass} ${btnClass}--next ${btnClass}--middle`,\n    };\n    const lastAttrs = {\n        type: 'button',\n        onClick: () => onChange(maxIndex),\n        className: `${btnClass} ${btnClass}--last`,\n    };\n\n    if (activeIndex === minIndex) {\n        firstAttrs.disabled = true;\n        prevAttrs.disabled = true;\n    }\n\n    if (activeIndex === maxIndex) {\n        nextAttrs.disabled = true;\n        lastAttrs.disabled = true;\n    }\n\n    return (\n        <div className=\"c-content-table-pagination\">\n            <button {...firstAttrs}>&laquo; {btnFirstLabel}</button>\n            <button {...prevAttrs}>&lsaquo; {btnPrevLabel}</button>\n            <button {...nextAttrs}>{btnNextLabel} &rsaquo;</button>\n            <button {...lastAttrs}>{btnLastLabel} &raquo;</button>\n        </div>\n    );\n};\n\nContentTablePaginationComponent.propTypes = {\n    minIndex: PropTypes.number.isRequired,\n    maxIndex: PropTypes.number.isRequired,\n    activeIndex: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default ContentTablePaginationComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/content-table/content.table.pagination.component.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SelectContentButtonComponent from '../select-content-button/select.content.button.component';\nimport Icon from '../../../common/icon/icon';\n\nconst ContentTableItemComponent = (props) => {\n    const { onPreview, data, contentTypesMap, multiple, selectedContent, onSelectContent, onItemRemove, canSelectContent } = props;\n    const notAvailableLabel = Translator.trans(/*@Desc(\"N/A\")*/ 'content_table.not_available.label', {}, 'universal_discovery_widget');\n    const item = data.ContentInfo.Content;\n    const contentType = contentTypesMap ? contentTypesMap[item.ContentType._href] : null;\n    const contentTypeIdentifier = contentType ? contentType.identifier : null;\n    const contentTypeName = contentTypeIdentifier ? window.eZ.adminUiConfig.contentTypeNames[contentTypeIdentifier] : notAvailableLabel;\n    const contentTypeIconUrl = eZ.helpers.contentType.getContentTypeIconUrl(contentTypeIdentifier);\n\n    return (\n        <div className=\"c-content-table-item\" onClick={onPreview} tabIndex=\"-1\">\n            <div className=\"c-content-table-item__icon\">\n                <Icon customPath={contentTypeIconUrl} extraClasses=\"ez-icon--medium\" />\n            </div>\n            <div className=\"c-content-table-item__name\" title={item.Name}>\n                {item.Name}\n            </div>\n            <div className=\"c-content-table-item__type\" title={contentTypeName}>\n                {contentTypeName}\n            </div>\n            <div className=\"c-content-table-item__actions\">\n                <SelectContentButtonComponent\n                    multiple={multiple}\n                    selectedContent={selectedContent}\n                    location={data}\n                    onSelectContent={onSelectContent}\n                    onItemRemove={onItemRemove}\n                    canSelectContent={canSelectContent}\n                />\n            </div>\n        </div>\n    );\n};\n\nContentTableItemComponent.propTypes = {\n    data: PropTypes.object.isRequired,\n    onPreview: PropTypes.func.isRequired,\n    contentTypesMap: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func,\n    selectedContent: PropTypes.array.isRequired,\n    onSelectContent: PropTypes.func.isRequired,\n    canSelectContent: PropTypes.func.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n    multiple: PropTypes.bool.isRequired,\n};\n\nexport default ContentTableItemComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/content-table/content.table.item.component.js","import React from 'react';\n\nconst ContentTableHeaderComponent = () => {\n    const nameLabel = Translator.trans(/*@Desc(\"Name\")*/ 'content_table.header.name', {}, 'universal_discovery_widget');\n    const typeLabel = Translator.trans(/*@Desc(\"Content Type\")*/ 'content_table.header.type', {}, 'universal_discovery_widget');\n\n    return (\n        <div className=\"c-content-table-header__list-headers\">\n            <div className=\"c-content-table-header__list-header c-content-table-header__list-header--icon\" />\n            <div className=\"c-content-table-header__list-header c-content-table-header__list-header--name\">{nameLabel}</div>\n            <div className=\"c-content-table-header__list-header c-content-table-header__list-header--type\">{typeLabel}</div>\n            <div className=\"c-content-table-header__list-header c-content-table-header__list-header--span\" />\n        </div>\n    );\n};\n\nexport default ContentTableHeaderComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/content-table/content.table.header.component.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TabContentPanelComponent from './tab.content.panel.component';\nimport FinderComponent from '../finder/finder.component';\nimport CreateComponent from '../create/create.component';\n\nconst CreatePanelComponent = (props) => {\n    const wrapperAttrs = { className: 'c-create-panel' };\n    const maxHeight = props.maxHeight - 24;\n    const componentProps = { ...props, maxHeight, allowContainersOnly: true };\n    const finderProps = { ...componentProps, multiple: false };\n    const chooseLanguageAndContentTypeTitle = Translator.trans(\n        /*@Desc(\"Choose Language and Content Type\")*/ 'content_on_the_fly.choose_language_and_content_type.title',\n        {},\n        'universal_discovery_widget'\n    );\n    const selectLocationTitle = Translator.trans(\n        /*@Desc(\"Select Location\")*/ 'content_on_the_fly.select_location.title',\n        {},\n        'universal_discovery_widget'\n    );\n\n    if (!props.isVisible) {\n        wrapperAttrs.hidden = true;\n    }\n\n    return (\n        <div {...wrapperAttrs}>\n            <TabContentPanelComponent {...props}>\n                <div className=\"c-create-panel__first-step\">\n                    <div className=\"c-create-panel__step-title\">1) {chooseLanguageAndContentTypeTitle}</div>\n                    <CreateComponent {...componentProps} />\n                </div>\n                <div className=\"c-create-panel__second-step\">\n                    <div className=\"c-create-panel__step-title\">2) {selectLocationTitle}</div>\n                    <FinderComponent {...finderProps} />\n                </div>\n            </TabContentPanelComponent>\n        </div>\n    );\n};\n\nCreatePanelComponent.propTypes = {\n    isVisible: PropTypes.bool.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    startingLocationId: PropTypes.number.isRequired,\n    findLocationsByParentLocationId: PropTypes.func.isRequired,\n    onItemSelect: PropTypes.func.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    restInfo: PropTypes.shape({\n        token: PropTypes.string.isRequired,\n        siteaccess: PropTypes.string.isRequired,\n    }).isRequired,\n    languages: PropTypes.object.isRequired,\n    contentTypes: PropTypes.object.isRequired,\n    onLanguageSelected: PropTypes.func.isRequired,\n    onContentTypeSelected: PropTypes.func.isRequired,\n    forcedLanguage: PropTypes.string.isRequired,\n    preselectedLocation: PropTypes.number,\n    allowedLocations: PropTypes.array.isRequired,\n    allowedLanguages: PropTypes.array.isRequired,\n    sortFieldMappings: PropTypes.object.isRequired,\n    sortOrderMappings: PropTypes.object.isRequired,\n};\n\nexport default CreatePanelComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/tab-content/create.panel.component.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ChooseLanguageComponent from './choose.language.component';\nimport ChooseContentTypeComponent from './choose.content.type.component';\n\nconst CreateComponent = (props) => {\n    return (\n        <div className=\"c-create\" style={{ maxHeight: `${props.maxHeight}px` }}>\n            <ChooseLanguageComponent {...props} />\n            <ChooseContentTypeComponent {...props} />\n        </div>\n    );\n};\n\nCreateComponent.propTypes = {\n    maxHeight: PropTypes.number.isRequired,\n    languages: PropTypes.object.isRequired,\n    contentTypes: PropTypes.object.isRequired,\n    onLanguageSelected: PropTypes.func.isRequired,\n    onContentTypeSelected: PropTypes.func.isRequired,\n    forcedLanguage: PropTypes.string.isRequired,\n    allowedLanguages: PropTypes.array.isRequired,\n    preselectedContentType: PropTypes.string,\n    allowedContentTypes: PropTypes.array.isRequired,\n    preselectedLanguage: PropTypes.string,\n};\n\nexport default CreateComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/create/create.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ChooseLanguageComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.updateSelection = this.updateSelection.bind(this);\n        this.renderOption = this.renderOption.bind(this);\n\n        let selectedLanguageCode = props.allowedLanguages.length ? props.allowedLanguages[0] : props.languages.priority[0];\n\n        if (props.preselectedLanguage) {\n            selectedLanguageCode = props.preselectedLanguage;\n        }\n\n        if (props.forcedLanguage) {\n            console.warn('[DEPRECATED] cotfForcedLanguage parameter is deprecated');\n            console.warn('[DEPRECATED] it will be removed from ezplatform-admin-ui-modules 2.0');\n            console.warn('[DEPRECATED] use cotfAllowedLanguages instead');\n\n            selectedLanguageCode = props.forcedLanguage;\n        }\n\n        if (props.allowedLanguages.length === 1) {\n            selectedLanguageCode = props.allowedLanguages[0];\n        }\n\n        this.state = {\n            selectedLanguage: props.languages.mappings[selectedLanguageCode],\n        };\n    }\n\n    componentDidMount() {\n        this.props.onLanguageSelected(this.state.selectedLanguage);\n    }\n\n    updateSelection(event) {\n        const languageCode = event.target.value;\n        const selectedLanguage = this.props.languages.mappings[languageCode];\n\n        this.props.onLanguageSelected(selectedLanguage);\n\n        this.setState((state) => Object.assign({}, state, { selectedLanguage }));\n    }\n\n    renderOption(languageCode, index) {\n        const language = this.props.languages.mappings[languageCode];\n        const attrs = {\n            key: index,\n            value: language.languageCode,\n        };\n\n        if (this.state.selectedLanguage.languageCode === languageCode) {\n            attrs.selected = true;\n        }\n\n        return <option {...attrs}>{language.name}</option>;\n    }\n\n    renderOptions() {\n        const { allowedLanguages, languages } = this.props;\n        const languagesList = allowedLanguages.length ? allowedLanguages : languages.priority;\n\n        return languagesList.map(this.renderOption);\n    }\n\n    render() {\n        const selectAttrs = {\n            className: 'form-control',\n            onChange: this.updateSelection,\n        };\n        const selectLanguageTitle = Translator.trans(\n            /*@Desc(\"Select a language\")*/ 'content_on_the_fly.select_language.title',\n            {},\n            'universal_discovery_widget'\n        );\n\n        if (this.props.forcedLanguage) {\n            console.warn('[DEPRECATED] forcedLanguage parameter is deprecated');\n            console.warn('[DEPRECATED] it will be removed from ezplatform-admin-ui-modules 2.0');\n            console.warn('[DEPRECATED] use allowedLanguages instead');\n        }\n\n        // @Deprecated - `forcedLanguage` will be removed in 2.0\n        if (this.props.allowedLanguages.length === 1 || this.props.forcedLanguage) {\n            selectAttrs.disabled = true;\n        }\n\n        return (\n            <div className=\"c-choose-language\">\n                <p className=\"c-choose-language__title\">{selectLanguageTitle}</p>\n                <div className=\"c-choose-lagauge__select-wrapper\">\n                    <select {...selectAttrs}>{this.renderOptions()}</select>\n                </div>\n            </div>\n        );\n    }\n}\n\nChooseLanguageComponent.propTypes = {\n    maxHeight: PropTypes.number.isRequired,\n    languages: PropTypes.object.isRequired,\n    onLanguageSelected: PropTypes.func.isRequired,\n    forcedLanguage: PropTypes.string.isRequired,\n    allowedLanguages: PropTypes.array.isRequired,\n    preselectedLanguage: PropTypes.string,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/create/choose.language.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../../../common/icon/icon';\n\nexport default class ChooseContentTypeComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        let selectedContentType = {};\n        const { allowedContentTypes, preselectedContentType } = props;\n        const isForcedContentType = allowedContentTypes.length === 1;\n        const hasPreselectedAllowedContentType = !allowedContentTypes.length || allowedContentTypes.includes(props.preselectedContentType);\n        const isPreselectedContentType = preselectedContentType && hasPreselectedAllowedContentType;\n\n        this._filterTimeout = null;\n\n        this.updateFilterQuery = this.updateFilterQuery.bind(this);\n        this.renderGroup = this.renderGroup.bind(this);\n        this.renderItem = this.renderItem.bind(this);\n\n        if (isForcedContentType) {\n            selectedContentType = this.findContentType(allowedContentTypes[0]);\n        } else if (isPreselectedContentType) {\n            selectedContentType = this.findContentType(preselectedContentType);\n        }\n\n        this.state = {\n            selectedContentType,\n            filterQuery: '',\n        };\n    }\n\n    componentDidMount() {\n        this.props.onContentTypeSelected(this.state.selectedContentType);\n    }\n\n    findContentType(identifier) {\n        let contentType = null;\n\n        Object.values(this.props.contentTypes).forEach((group) => {\n            const result = group.find((contentType) => contentType.identifier === identifier);\n\n            if (result) {\n                contentType = result;\n            }\n        });\n\n        return contentType;\n    }\n\n    updateSelectedItem(selectedContentType) {\n        this.props.onContentTypeSelected(selectedContentType);\n\n        this.setState((state) => Object.assign({}, state, { selectedContentType }));\n    }\n\n    updateFilterQuery(event) {\n        const filterQuery = event.target.value.toLowerCase();\n\n        window.clearTimeout(this._filterTimeout);\n\n        this._filterTimeout = window.setTimeout(() => {\n            this.setState((state) => Object.assign({}, state, { filterQuery }));\n        }, 200);\n    }\n\n    renderItem(item, index) {\n        const { name, identifier } = item;\n        const contentTypeIconUrl = eZ.helpers.contentType.getContentTypeIconUrl(identifier);\n        const isNotSelectable = this.props.allowedContentTypes.length && !this.props.allowedContentTypes.includes(identifier);\n        const attrs = {\n            className: 'c-choose-content-type__group-item',\n            key: index,\n        };\n\n        if (this.state.selectedContentType.identifier === identifier) {\n            attrs.className = `${attrs.className} is-selected`;\n        }\n\n        if (isNotSelectable) {\n            attrs.className = `${attrs.className} is-not-selectable`;\n        }\n\n        if (!isNotSelectable) {\n            attrs.onClick = this.updateSelectedItem.bind(this, item);\n        }\n\n        if (this.state.filterQuery && !name.toLowerCase().includes(this.state.filterQuery)) {\n            attrs.hidden = true;\n        }\n\n        return (\n            <div {...attrs}>\n                <div className=\"c-choose-content-type__group-item-icon\">\n                    <Icon customPath={contentTypeIconUrl} extraClasses=\"ez-icon--small\" />\n                </div>\n                {name}\n            </div>\n        );\n    }\n\n    renderGroup(groupName, index) {\n        const items = this.props.contentTypes[groupName];\n        const groupAttrs = {};\n\n        if (this.state.filterQuery && items.every((item) => !item.name.toLowerCase().includes(this.state.filterQuery))) {\n            groupAttrs.hidden = true;\n        }\n\n        return (\n            <div className=\"c-choose-content-type__group\" key={index}>\n                <div className=\"c-choose-content-type__group-name\" {...groupAttrs}>\n                    {groupName}\n                </div>\n                {items.map(this.renderItem)}\n            </div>\n        );\n    }\n\n    render() {\n        const { maxHeight, contentTypes } = this.props;\n        const selectContentTypeTitle = Translator.trans(\n            /*@Desc(\"Select a Content Type\")*/ 'content_on_the_fly.select_a_content_type.title',\n            {},\n            'universal_discovery_widget'\n        );\n        const typeToRefinePlaceholder = Translator.trans(\n            /*@Desc(\"Type to refine\")*/ 'content_on_the_fly.type_to_refine.placeholder',\n            {},\n            'universal_discovery_widget'\n        );\n\n        return (\n            <div className=\"c-choose-content-type\">\n                <p className=\"c-choose-content-type__title\">{selectContentTypeTitle}</p>\n                <div className=\"c-choose-content-type__list-wrapper\">\n                    <input className=\"form-control\" type=\"text\" placeholder={typeToRefinePlaceholder} onChange={this.updateFilterQuery} />\n                    <div className=\"c-choose-content-type__list\" style={{ maxHeight: `${maxHeight - 232}px` }}>\n                        {Object.keys(contentTypes).map(this.renderGroup)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChooseContentTypeComponent.propTypes = {\n    maxHeight: PropTypes.number.isRequired,\n    contentTypes: PropTypes.object.isRequired,\n    onContentTypeSelected: PropTypes.func.isRequired,\n    preselectedContentType: PropTypes.string,\n    allowedContentTypes: PropTypes.array.isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/create/choose.content.type.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TabContentPanelComponent from './tab.content.panel.component';\nimport BookmarksComponent from '../bookmarks/bookmarks.component';\n\nexport default class BookmarksPanelComponent extends Component {\n    getBookmarksAttrs() {\n        const {\n            multiple,\n            findContentBySearchQuery,\n            onItemSelect,\n            maxHeight,\n            contentTypesMap,\n            bookmarksPerPage,\n            restInfo,\n            userBookmarksItems,\n            userBookmarksCount,\n            requireBookmarksCount,\n            selectedContent,\n            onSelectContent,\n            canSelectContent,\n            onItemRemove,\n        } = this.props;\n\n        return {\n            multiple,\n            findContentBySearchQuery,\n            onItemSelect,\n            maxHeight,\n            contentTypesMap,\n            bookmarksPerPage,\n            restInfo,\n            userBookmarksItems,\n            userBookmarksCount,\n            requireBookmarksCount,\n            selectedContent,\n            onSelectContent,\n            canSelectContent,\n            onItemRemove,\n        };\n    }\n\n    getWrapperAttrs() {\n        const { isVisible } = this.props;\n\n        return {\n            hidden: !isVisible,\n        };\n    }\n\n    render() {\n        const wrapperAttrs = this.getWrapperAttrs();\n        const bookmarksAttrs = this.getBookmarksAttrs();\n\n        return (\n            <div className=\"c-bookmarks-panel\" {...wrapperAttrs}>\n                <TabContentPanelComponent {...this.props}>\n                    <BookmarksComponent {...bookmarksAttrs} />\n                </TabContentPanelComponent>\n            </div>\n        );\n    }\n}\n\nBookmarksPanelComponent.propTypes = {\n    isVisible: PropTypes.bool.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    onItemSelect: PropTypes.func.isRequired,\n    findContentBySearchQuery: PropTypes.func.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    contentTypesMap: PropTypes.object.isRequired,\n    bookmarksPerPage: PropTypes.number.isRequired,\n    userBookmarksItems: PropTypes.array,\n    userBookmarksCount: PropTypes.number,\n    requireBookmarksCount: PropTypes.func.isRequired,\n    restInfo: PropTypes.shape({\n        token: PropTypes.string.isRequired,\n        siteaccess: PropTypes.string.isRequired,\n    }).isRequired,\n    selectedContent: PropTypes.array.isRequired,\n    onSelectContent: PropTypes.func.isRequired,\n    canSelectContent: PropTypes.func.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/tab-content/bookmarks.panel.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../../../common/icon/icon';\n\nimport ContentTableComponent from '../content-table/content.table.component';\n\nexport default class BookmarksComponent extends Component {\n    renderTable() {\n        const { userBookmarksCount, userBookmarksItems } = this.props;\n\n        if (userBookmarksCount === null) {\n            return null;\n        }\n\n        const {\n            onItemSelect,\n            bookmarksPerPage,\n            contentTypesMap,\n            requireBookmarksCount,\n            selectedContent,\n            onSelectContent,\n            canSelectContent,\n            onItemRemove,\n            multiple,\n        } = this.props;\n        const noBookmarksMessage = Translator.trans(\n            /*@Desc(\"No content items. Content items you bookmark will appear here.\")*/ 'bookmarks_table.no_bookmarks.message',\n            {},\n            'universal_discovery_widget'\n        );\n        const tableTitle = Translator.trans(/*@Desc(\"Bookmarks\")*/ 'bookmarks_table.title', {}, 'universal_discovery_widget');\n\n        return (\n            <ContentTableComponent\n                items={userBookmarksItems}\n                count={userBookmarksCount}\n                requireItemsCount={requireBookmarksCount}\n                onItemSelect={onItemSelect}\n                onItemClick={onItemSelect}\n                perPage={bookmarksPerPage}\n                contentTypesMap={contentTypesMap}\n                title={tableTitle}\n                noItemsMessage={noBookmarksMessage}\n                selectedContent={selectedContent}\n                onSelectContent={onSelectContent}\n                canSelectContent={canSelectContent}\n                onItemRemove={onItemRemove}\n                multiple={multiple}\n            />\n        );\n    }\n\n    renderSpinner() {\n        const { userBookmarksCount } = this.props;\n\n        if (userBookmarksCount === null) {\n            return <Icon name=\"spinner\" extraClasses=\"c-bookmarks__loading-spinner ez-spin ez-icon-x2 ez-icon-spinner\" />;\n        }\n    }\n\n    renderNoBookmarksInfo() {\n        const { userBookmarksCount } = this.props;\n        const noBookmarksMessage = Translator.trans(\n            /*@Desc(\"No content items. Content items you bookmark will appear here.\")*/ 'bookmarks_table.no_bookmarks.message',\n            {},\n            'universal_discovery_widget'\n        );\n\n        if (!userBookmarksCount) {\n            return <div className=\"c-bookmarks__no-bookmarks-info\">{noBookmarksMessage}</div>;\n        }\n    }\n\n    render() {\n        const { maxHeight } = this.props;\n\n        return (\n            <div className=\"c-bookmarks\" style={{ maxHeight: `${maxHeight - 32}px` }}>\n                {this.renderSpinner()}\n                {this.renderNoBookmarksInfo()}\n                {this.renderTable()}\n            </div>\n        );\n    }\n}\n\nBookmarksComponent.propTypes = {\n    findContentBySearchQuery: PropTypes.func.isRequired,\n    onItemSelect: PropTypes.func.isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    contentTypesMap: PropTypes.object.isRequired,\n    bookmarksPerPage: PropTypes.number.isRequired,\n    userBookmarksCount: PropTypes.number,\n    userBookmarksItems: PropTypes.array,\n    requireBookmarksCount: PropTypes.func.isRequired,\n    restInfo: PropTypes.shape({\n        token: PropTypes.string.isRequired,\n        siteaccess: PropTypes.string.isRequired,\n    }).isRequired,\n    selectedContent: PropTypes.array.isRequired,\n    onSelectContent: PropTypes.func.isRequired,\n    canSelectContent: PropTypes.func.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n    multiple: PropTypes.bool.isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/bookmarks/bookmarks.component.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../../../common/icon/icon';\n\nimport { loadLocation } from '../../services/universal.discovery.service';\n\nexport default class ContentCreatorComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleIframeLoad = this.handleIframeLoad.bind(this);\n        this.handlePublish = this.handlePublish.bind(this);\n        this.enablePublishBtn = this.enablePublishBtn.bind(this);\n        this.disablePublishBtn = this.disablePublishBtn.bind(this);\n        this.renderPublishBtn = this.renderPublishBtn.bind(this);\n\n        this._refIframe = null;\n\n        this.state = {\n            iframeLoading: true,\n            publishBtnDisabled: false,\n        };\n    }\n\n    handlePublish() {\n        this._refIframe.contentWindow.onbeforeunload = () => {};\n        this._refIframe.contentWindow.document.body.querySelector('#ezrepoforms_content_edit_publish').click();\n    }\n\n    handleIframeLoad() {\n        const iframeWindow = this._refIframe.contentWindow;\n        const iframeDoc = iframeWindow.document;\n        const locationId = iframeDoc.querySelector('meta[name=\"LocationID\"]');\n        const iframeUrl = this.generateIframeUrl();\n\n        if (iframeWindow.location.pathname !== iframeUrl && !locationId) {\n            this._refIframe.setAttribute('src', iframeUrl);\n\n            return;\n        }\n\n        if (locationId) {\n            this.loadLocationInfo(locationId.content);\n        } else {\n            this.setState((state) => Object.assign({}, state, { iframeLoading: false }));\n\n            iframeWindow.onbeforeunload = () => {\n                return '';\n            };\n            iframeWindow.onunload = () => {\n                this.setState((state) => Object.assign({}, state, { iframeLoading: true }));\n            };\n        }\n\n        iframeDoc.body.addEventListener('fbFormBuilderLoaded', this.disablePublishBtn, false);\n        iframeDoc.body.addEventListener('fbFormBuilderUnloaded', this.enablePublishBtn, false);\n    }\n\n    enablePublishBtn() {\n        this.setState(() => ({ publishBtnDisabled: false }));\n    }\n\n    disablePublishBtn() {\n        this.setState(() => ({ publishBtnDisabled: true }));\n    }\n\n    loadLocationInfo(locationId) {\n        const { loadLocation, handlePublish, restInfo } = this.props;\n        const promise = new Promise((resolve) => loadLocation(Object.assign({}, restInfo, { locationId }), resolve));\n\n        promise.then((response) => {\n            handlePublish(response.View.Result.searchHits.searchHit[0].value.Location);\n        });\n    }\n\n    generateIframeUrl() {\n        const { selectedLocationId, selectedLanguage, selectedContentType } = this.props;\n\n        return window.Routing.generate('ezplatform.content_on_the_fly.create', {\n            locationId: selectedLocationId,\n            languageCode: selectedLanguage.languageCode,\n            contentTypeIdentifier: selectedContentType.identifier,\n        });\n    }\n\n    /**\n     * Renders a loading state spinner\n     *\n     * @method renderLoadingSpinner\n     * @returns {Element}\n     * @memberof FinderTreeLeafComponent\n     */\n    renderLoadingSpinner() {\n        if (!this.state.iframeLoading) {\n            return null;\n        }\n\n        return <Icon name=\"spinner\" extraClasses=\"ez-spin ez-icon-x2 ez-icon-spinner\" />;\n    }\n\n    renderPublishBtn() {\n        const publishLabel = Translator.trans(/*@Desc(\"Publish\")*/ 'content_on_the_fly.publish.label', {}, 'universal_discovery_widget');\n        const attrs = {\n            className: 'm-ud__action m-ud__action--publish',\n            onClick: this.handlePublish,\n            type: 'button',\n        };\n\n        if (this.state.publishBtnDisabled) {\n            attrs.disabled = true;\n        }\n\n        return <button {...attrs}>{publishLabel}</button>;\n    }\n\n    render() {\n        const { selectedContentType, selectedLanguage, maxHeight, onCancel } = this.props;\n        const title = Translator.trans(\n            /*@Desc(\"Creating - %contentType% in %language%\")*/ 'content_on_the_fly.creating_content.title',\n            {\n                contentType: selectedContentType.name,\n                language: selectedLanguage.name,\n            },\n            'universal_discovery_widget'\n        );\n        const cancelLabel = Translator.trans(/*@Desc(\"Cancel\")*/ 'cancel.label', {}, 'universal_discovery_widget');\n        const iframeUrl = this.generateIframeUrl();\n        const contentClass = this.state.iframeLoading ? 'm-ud__content is-loading' : 'm-ud__content';\n\n        return (\n            <div className=\"m-ud__wrapper\">\n                <div className=\"m-ud c-content-creator\" ref={this.props.setMainContainerRef}>\n                    <h1 className=\"m-ud__title\">{title}</h1>\n                    <div className=\"m-ud__content-wrapper\">\n                        <div className={contentClass}>\n                            {this.renderLoadingSpinner()}\n                            <iframe\n                                src={iframeUrl}\n                                ref={(ref) => (this._refIframe = ref)}\n                                className=\"c-content-creator__iframe\"\n                                onLoad={this.handleIframeLoad}\n                                style={{ height: `${maxHeight + 32}px` }}\n                            />\n                        </div>\n                        <div className=\"m-ud__actions\">\n                            <div className=\"m-ud__btns\">\n                                <button type=\"button\" className=\"m-ud__action m-ud__action--cancel\" onClick={onCancel}>\n                                    {cancelLabel}\n                                </button>\n                                {this.renderPublishBtn()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContentCreatorComponent.propTypes = {\n    maxHeight: PropTypes.number.isRequired,\n    selectedLanguage: PropTypes.object.isRequired,\n    selectedContentType: PropTypes.object.isRequired,\n    selectedLocationId: PropTypes.number.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    handlePublish: PropTypes.func.isRequired,\n    loadLocation: PropTypes.func,\n    restInfo: PropTypes.object.isRequired,\n    setMainContainerRef: PropTypes.func.isRequired,\n};\n\nContentCreatorComponent.defaultProps = {\n    loadLocation,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/content-creator/content.creator.component.js","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SelectedContentItemComponent from './selected.content.item.component';\nimport SelectedContentPopupComponent from './selected.content.popup.component';\n\nexport default class SelectedContentComponent extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isPopupVisible: false,\n        };\n\n        this.hidePopup = this.hidePopup.bind(this);\n        this.togglePopup = this.togglePopup.bind(this);\n        this.renderSelectedItem = this.renderSelectedItem.bind(this);\n    }\n\n    /**\n     * Toggles popup visible state\n     *\n     * @method togglePopup\n     * @memberof SelectedContentComponent\n     */\n    togglePopup() {\n        this.setState((state, props) => ({ isPopupVisible: !state.isPopupVisible && !!props.items.length }));\n    }\n\n    /**\n     * Hides popup\n     *\n     * @method hidePopup\n     * @memberof SelectedContentComponent\n     */\n    hidePopup() {\n        this.setState(() => ({ isPopupVisible: false }));\n    }\n\n    /**\n     * Renders a selected content item\n     *\n     * @method renderSelectedItem\n     * @param {Object} item\n     * @returns {Element}\n     * @memberof SelectedContentComponent\n     */\n    renderSelectedItem(item) {\n        return (\n            <SelectedContentItemComponent\n                key={item.remoteId}\n                data={item}\n                onRemove={this.props.onItemRemove}\n                contentTypesMap={this.props.contentTypesMap}\n            />\n        );\n    }\n\n    /**\n     * Renders a limit information label\n     *\n     * @method renderLimitLabel\n     * @returns {Element}\n     * @memberof SelectedContentComponent\n     */\n    renderLimitLabel() {\n        let limitLabel = '';\n\n        if (this.props.itemsLimit && this.props.multiple) {\n            const limitLabelText = Translator.trans(\n                /*@Desc(\"Limit %items% max\")*/ 'select_content.limit.label',\n                {\n                    items: this.props.itemsLimit,\n                },\n                'universal_discovery_widget'\n            );\n\n            limitLabel = <small className=\"c-selected-content__label--limit\">{limitLabelText}</small>;\n        }\n\n        return limitLabel;\n    }\n\n    /**\n     * Renders selected items info\n     *\n     * @method renderSelectedItems\n     * @returns {Element}\n     * @memberof SelectedContentComponent\n     */\n    renderSelectedItems() {\n        if (!this.props.items.length) {\n            return null;\n        }\n\n        return (\n            <SelectedContentPopupComponent title={this.getTitle()} visible={this.state.isPopupVisible} onClose={this.hidePopup}>\n                {this.props.items.map(this.renderSelectedItem)}\n            </SelectedContentPopupComponent>\n        );\n    }\n\n    /**\n     * Gets component title\n     *\n     * @method getTitle\n     * @returns {String}\n     * @memberof SelectedContentComponent\n     */\n    getTitle() {\n        let title = Translator.trans(/*@Desc(\"Confirmed items\")*/ 'select_content.confirmed_items.title', {}, 'universal_discovery_widget');\n        const total = this.props.items.length;\n\n        if (total) {\n            title = `${title} (${total})`;\n        }\n\n        return title;\n    }\n\n    render() {\n        const { items } = this.props;\n        const titles = items.map((item) => item.ContentInfo.Content.Name).join(', ');\n        const anyItemSelected = !!items.length;\n        const cssClassOnAnyItemSelected = anyItemSelected ? 'c-selected-content__info--any-item-selected' : '';\n        const infoCssClasses = `c-selected-content__info ${cssClassOnAnyItemSelected}`;\n        const noConfirmedContentTitle = Translator.trans(\n            /*@Desc(\"No confirmed content yet\")*/ 'select_content.no_confirmed_content.title',\n            {},\n            'universal_discovery_widget'\n        );\n\n        return (\n            <div className=\"c-selected-content\">\n                {this.renderSelectedItems()}\n                <div className={infoCssClasses} onClick={this.togglePopup} tabIndex=\"-1\">\n                    <strong className=\"c-selected-content__title\">{this.getTitle()}</strong>\n                    {this.renderLimitLabel()}\n                    <div className=\"c-selected-content__content-names\">{titles.length ? titles : noConfirmedContentTitle}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSelectedContentComponent.propTypes = {\n    items: PropTypes.array.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    itemsLimit: PropTypes.number.isRequired,\n    onItemRemove: PropTypes.func.isRequired,\n    contentTypesMap: PropTypes.object.isRequired,\n};\n\nSelectedContentComponent.defaultProps = {\n    items: [],\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/selected-content/selected.content.component.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../../../common/icon/icon';\n\nconst SelectedContentItemComponent = ({ data, onRemove }) => {\n    const contentTypeInfo = data.ContentInfo.Content.ContentTypeInfo;\n    const notAvailableLabel = Translator.trans(/*@Desc(\"N/A\")*/ 'select_content.not_available.label', {}, 'universal_discovery_widget');\n    const contentTypeName = contentTypeInfo ? contentTypeInfo.names.value[0]['#text'] : notAvailableLabel;\n    let icon;\n\n    if (contentTypeInfo) {\n        icon = <Icon name={contentTypeInfo.identifier} extraClasses=\"c-selected-content-item__icon ez-icon--small\" />;\n    }\n\n    return (\n        <div className=\"c-selected-content-item\">\n            <div className=\"c-selected-content-item__wrapper\">\n                <div className=\"c-selected-content-item__name\">{data.ContentInfo.Content.Name}</div>\n                <div className=\"c-selected-content-item__type\">\n                    {icon} {contentTypeName}\n                </div>\n            </div>\n            <div className=\"c-selected-content-item__remove\" onClick={() => onRemove(data.id)} tabIndex=\"-1\">\n                <Icon name=\"discard\" extraClasses=\"ez-icon--light ez-icon--small\" />\n            </div>\n        </div>\n    );\n};\n\nSelectedContentItemComponent.propTypes = {\n    data: PropTypes.object.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nexport default SelectedContentItemComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/selected-content/selected.content.item.component.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PopupComponent from '../../../common/tooltip-popup/tooltip.popup.component';\n\nconst SelectedContentPopupComponent = (props) => {\n    return (\n        <div className=\"c-selected-content-popup\">\n            <PopupComponent {...props}>{props.children}</PopupComponent>\n        </div>\n    );\n};\n\nSelectedContentPopupComponent.propTypes = {\n    children: PropTypes.any.isRequired,\n};\n\nexport default SelectedContentPopupComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/selected-content/selected.content.popup.component.js","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../../../common/icon/icon';\n\nexport default class ContentMetaPreviewComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { imageUri: '', translations: [] };\n\n        this.toggleBookmark = this.toggleBookmark.bind(this);\n    }\n\n    /**\n     * Renders an icon related to a content type\n     *\n     * @method renderIcon\n     * @returns {JSX.Element|null}\n     * @memberof ContentMetaPreviewComponent\n     */\n    renderIcon() {\n        const contentTypeInfo = this.props.data.ContentInfo.Content.ContentTypeInfo;\n\n        if (!contentTypeInfo) {\n            return null;\n        }\n\n        const contentTypeIdentifier = contentTypeInfo.identifier;\n        const contentTypeIconUrl = eZ.helpers.contentType.getContentTypeIconUrl(contentTypeIdentifier);\n\n        return <Icon customPath={contentTypeIconUrl} extraClasses=\"c-meta-preview__icon ez-icon--small\" />;\n    }\n\n    /**\n     * Gets image URI to image preview from content meta\n     *\n     * @method getImageUri\n     * @returns {String}\n     * @memberof ContentMetaPreviewComponent\n     */\n    getImageUri(data) {\n        if (!data || !data.CurrentVersion) {\n            return '';\n        }\n\n        const version = data.CurrentVersion.Version;\n        const imageField = version.Fields.field.find((field) => field.fieldTypeIdentifier === 'ezimage');\n\n        return imageField && imageField.fieldValue ? imageField.fieldValue.uri : '';\n    }\n\n    /**\n     * Gets list of translations from content meta\n     *\n     * @method getTranslations\n     * @returns {Array}\n     * @memberof ContentMetaPreviewComponent\n     */\n    getTranslations(data) {\n        if (!data || !data.CurrentVersion) {\n            return [];\n        }\n\n        const version = data.CurrentVersion.Version;\n        const versionLanguages = version.VersionInfo.VersionTranslationInfo.Language;\n\n        return versionLanguages.map((language) => this.props.languages.mappings[language.languageCode].name);\n    }\n\n    /**\n     * Renders a translation item\n     *\n     * @method renderTranslation\n     * @returns {Element}\n     * @memberof ContentMetaPreviewComponent\n     */\n    renderTranslation(translation, index) {\n        return (\n            <span key={index} className=\"c-meta-preview__translation\">\n                {translation}\n            </span>\n        );\n    }\n\n    /**\n     * Renders image preview\n     *\n     * @method renderImagePreview\n     * @returns {Element}\n     * @memberof ContentMetaPreviewComponent\n     */\n    renderImagePreview() {\n        const { data } = this.props;\n\n        if (!data.CurrentVersion) {\n            return <Icon name=\"spinner\" extraClasses=\"c-meta-preview__loading-spinner ez-spin ez-icon-x2 ez-icon-spinner\" />;\n        }\n\n        const imageUri = this.getImageUri(data);\n        const imagePreviewNotAvailableLabel = Translator.trans(\n            /*@Desc(\"Content preview is not available\")*/ 'content_meta_preview.image_preview_not_available.info',\n            {},\n            'universal_discovery_widget'\n        );\n\n        if (!imageUri.length) {\n            return <Fragment>{imagePreviewNotAvailableLabel}</Fragment>;\n        }\n\n        return <img className=\"c-meta-preview__image\" src={imageUri} alt=\"\" />;\n    }\n\n    /**\n     * Toggles bookmark\n     *\n     * @method toggleBookmark\n     * @memberof ContentMetaPreviewComponent\n     */\n    toggleBookmark() {\n        const { toggleBookmark, data } = this.props;\n\n        toggleBookmark(data);\n    }\n\n    /**\n     * Renders bookmark icon\n     *\n     * @method renderBookmarkIcon\n     * @memberof ContentMetaPreviewComponent\n     */\n    renderBookmarkIcon() {\n        const { isBookmarked } = this.props;\n\n        const bookmarkIconId = isBookmarked ? 'bookmark-active' : 'bookmark';\n        const action = isBookmarked ? 'remove' : 'add';\n        const wrapperClassName = `ez-add-to-bookmarks__icon-wrapper ez-add-to-bookmarks__icon-wrapper--${action}`;\n\n        return (\n            <div className={wrapperClassName} onClick={this.toggleBookmark} tabIndex=\"-1\">\n                <Icon name={bookmarkIconId} extraClasses=\"ez-icon--medium ez-icon--secondary\" />\n            </div>\n        );\n    }\n\n    render() {\n        const { data, maxHeight } = this.props;\n        const content = data.ContentInfo.Content;\n        const contentTypeIdentifier = content.ContentTypeInfo.identifier;\n        const contentTypeName = window.eZ.adminUiConfig.contentTypeNames[contentTypeIdentifier];\n        const { formatShortDateWithTimezone } = window.eZ.helpers.timezone;\n        const translations = this.getTranslations(data);\n        const title = Translator.trans(/*@Desc(\"Content Meta Preview\")*/ 'content_meta_preview.title', {}, 'universal_discovery_widget');\n        const lastModifiedLabel = Translator.trans(\n            /*@Desc(\"Last modified\")*/ 'content_meta_preview.last_modified.label',\n            {},\n            'universal_discovery_widget'\n        );\n        const creationDateLabel = Translator.trans(\n            /*@Desc(\"Creation date\")*/ 'content_meta_preview.creation_date.label',\n            {},\n            'universal_discovery_widget'\n        );\n        const translationsLabel = Translator.trans(\n            /*@Desc(\"Translations\")*/ 'content_meta_preview.translations.label',\n            {},\n            'universal_discovery_widget'\n        );\n\n        return (\n            <div className=\"c-meta-preview__wrapper\">\n                <h1 className=\"c-meta-preview__title\">{title}</h1>\n                <div className=\"c-meta-preview\" style={{ maxHeight: `${maxHeight - 64}px` }}>\n                    <div className=\"c-meta-preview__top-wrapper\">\n                        <div className=\"c-meta-preview__content-type\">\n                            {this.renderIcon()} {contentTypeName}\n                        </div>\n                        <div className=\"c-meta-preview__content-bookmark\">{this.renderBookmarkIcon()}</div>\n                    </div>\n                    <div className=\"c-meta-preview__meta-wrapper\">\n                        <div className=\"c-meta-preview__image-wrapper\">{this.renderImagePreview()}</div>\n                        <div className=\"c-meta-preview__name\">{content.Name}</div>\n                        <div className=\"c-meta-preview__content-info\">\n                            <h3 className=\"c-meta-preview__subtitle\">{lastModifiedLabel}:</h3>\n                            {formatShortDateWithTimezone(new Date(content.lastModificationDate))}\n                        </div>\n                        <div className=\"c-meta-preview__content-info\">\n                            <h3 className=\"c-meta-preview__subtitle\">{creationDateLabel}:</h3>\n                            {formatShortDateWithTimezone(new Date(content.publishedDate))}\n                        </div>\n                        <div className=\"c-meta-preview__content-info\">\n                            <h3 className=\"c-meta-preview__subtitle\">{translationsLabel}:</h3>\n                            {translations.map(this.renderTranslation)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContentMetaPreviewComponent.propTypes = {\n    data: PropTypes.object.isRequired,\n    isBookmarked: PropTypes.bool,\n    toggleBookmark: PropTypes.func.isRequired,\n    contentTypesMap: PropTypes.object.isRequired,\n    restInfo: PropTypes.shape({\n        token: PropTypes.string.isRequired,\n        siteaccess: PropTypes.string.isRequired,\n    }).isRequired,\n    maxHeight: PropTypes.number.isRequired,\n    activeTab: PropTypes.string.isRequired,\n    languages: PropTypes.object.isRequired,\n    ready: PropTypes.bool.isRequired,\n};\n\nContentMetaPreviewComponent.defaultProps = {\n    isBookmarked: null,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/components/content-meta-preview/content.meta.preview.component.js","import { showErrorNotification } from '../../common/services/notification.service';\nimport {\n    getBasicRequestInit,\n    handleRequestResponse,\n    handleRequestError,\n    handleRequestResponseStatus,\n} from '../../common/helpers/request.helper.js';\n\nconst ENDPOINT_BOOKMARK = '/api/ezp/v2/bookmark';\n\n/**\n * Loads bookmarks\n *\n * @function loadBookmarks\n * @param {Object} restInfo REST config hash containing: token and siteaccess properties\n * @param {Function} callback\n */\nexport const loadBookmarks = (restInfo, limit, offset, callback) => {\n    const basicRequestInit = getBasicRequestInit(restInfo);\n    const request = new Request(`${ENDPOINT_BOOKMARK}?limit=${limit}&offset=${offset}`, {\n        ...basicRequestInit,\n        method: 'GET',\n        headers: {\n            ...basicRequestInit.headers,\n            Accept: 'application/vnd.ez.api.ContentTypeInfoList+json',\n        },\n    });\n\n    fetch(request)\n        .then(handleRequestResponse)\n        .then(callback)\n        .catch(showErrorNotification);\n};\n\n/**\n * Adds bookmark\n *\n * @function addBookmark\n * @param {Object} restInfo REST config hash containing: token and siteaccess properties\n * @param {String} locationId location id\n * @param {Function} callback\n */\nexport const addBookmark = (restInfo, locationId, callback) => {\n    const basicRequestInit = getBasicRequestInit(restInfo);\n    const request = new Request(`${ENDPOINT_BOOKMARK}/${locationId}`, {\n        ...basicRequestInit,\n        method: 'POST',\n    });\n\n    fetch(request)\n        .then(handleRequestResponseStatus)\n        .then(callback)\n        .catch(showErrorNotification);\n};\n\n/**\n * Removes bookmark\n *\n * @function removeBookmark\n * @param {Object} restInfo REST config hash containing: token and siteaccess properties\n * @param {String} locationId location id\n * @param {Function} callback\n */\nexport const removeBookmark = (restInfo, locationId, callback) => {\n    const basicRequestInit = getBasicRequestInit(restInfo);\n    const request = new Request(`${ENDPOINT_BOOKMARK}/${locationId}`, {\n        ...basicRequestInit,\n        method: 'DELETE',\n    });\n\n    fetch(request)\n        .then(handleRequestResponseStatus)\n        .then(callback)\n        .catch(showErrorNotification);\n};\n\n/**\n * Checks if given location is bookmarked\n *\n * @function checkIsBookmarked\n * @param {Object} restInfo REST config hash containing: token and siteaccess properties\n * @param {String} locationId location id\n * @param {Function} callback\n */\nexport const checkIsBookmarked = (restInfo, locationId, callback) => {\n    const basicRequestInit = getBasicRequestInit(restInfo);\n    const request = new Request(`${ENDPOINT_BOOKMARK}/${locationId}`, {\n        ...basicRequestInit,\n        method: 'HEAD',\n    });\n    const bookmarkedStatusCode = 200;\n    const notBookmarkedStatusCode = 404;\n\n    fetch(request)\n        .then((response) => {\n            const { status } = response;\n\n            if (status === bookmarkedStatusCode || status === notBookmarkedStatusCode) {\n                return status === bookmarkedStatusCode;\n            }\n\n            return handleRequestError(response);\n        })\n        .then(callback)\n        .catch(showErrorNotification);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/universal-discovery/services/bookmark.service.js","/**\n * Checks if are the same locations\n *\n * @function areSameLocations\n * @param {Object} location1\n * @param {Object} location2\n * @returns {Boolean}\n */\nexport const areSameLocations = (location1, location2) => location1.id === location2.id;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/helpers/compare.helper.js"],"sourceRoot":""}